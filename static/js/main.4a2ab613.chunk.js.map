{"version":3,"sources":["pages/Todolist/bg.png","util/constants/settingSystem.js","assets/img/download (1).jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","pages/BaiTapToDoListSaga/bg.png","assets/img/download.jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.js","components/Home/Header/Header.js","pages/About/About.js","pages/BaiTapToDoListSaga/BaiTapToDoListSaga.js","redux/constants/ToDoListConst.js","util/history.js","pages/Contact/Contact.js","pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js","redux/actions/CyberBugsActions.js","redux/constants/Cyberbugs/Cyberbugs.js","HOC/Modal/SlideDown.js","pages/Login/Login.js","pages/Register/Register.js","pages/DemoHOCModal/DemoHOCModal.js","pages/Detail/Detail.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/Todolist/Todolist.js","redux/actions/ToDoListAction.js","pages/Todolist/ToDoListRedux.js","pages/Todolist/TodolistRFC.js","templates/HomeTemplate/HomeTemplate.js","templates/HomeTemplate/UserLoginTemplate.js","components/Cyberbugs/Main/ContentMain.js","redux/constants/Cyberbugs/TaskConstants.js","components/Cyberbugs/Main/HeaderMain.js","components/Cyberbugs/Main/InfoMain.js","components/Cyberbugs/MenuCyberbugs.js","redux/constants/Cyberbugs/StatusConstant.js","components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs.js","redux/constants/Cyberbugs/PriorityConstants.js","redux/constants/Cyberbugs/TaskTypeConstants.js","components/Forms/FormCreateTask/FormCreateTask.js","redux/constants/Cyberbugs/ProjectCyberBugsConstants.js","redux/constants/Cyberbugs/UserConstatnts.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","pages/CyberBugs/ProjectDetail/indexCyberBugs.js","pages/CyberBugs/CreateProject/CreateProject.js","components/Forms/FormEditProject.js/FormEditProject.js","pages/CyberBugs/ProjectManagement/ProjectManagement.js","HOC/CyberbugsHOC/DrawerCyberBugs.js","pages/DemoDragDrop/DemoDragDrop.js","pages/Demo/Demo.js","pages/DragAndDropDnD/DragAndDropDnD.js","pages/CyberBugs/SigninCyberBugs/SigninCyberBugs.js","pages/CyberBugs/UserManagement/UserManagement.js","App.js","serviceWorker.js","redux/reducers/ToDoListReducer.js","redux/reducers/LoadingReducer.js","redux/reducers/ModalReducer.js","services/ToDoListService.js","redux/sagas/ToDoListSaga.js","redux/constants/LoadingConst.js","services/CyberbugsService.js","services/baseService.js","services/UserService.js","redux/sagas/Cyberbugs/UserCyberbugsSaga.js","redux/sagas/Cyberbugs/ProjectCategorySaga.js","services/ProjectService.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/ProjectSaga.js","services/TaskTypeService.js","redux/sagas/Cyberbugs/TaskTypeSaga.js","services/PriorityService.js","redux/sagas/Cyberbugs/PrioritySaga.js","services/TaskService.js","redux/sagas/Cyberbugs/TaskSaga.js","services/StatusService.js","redux/sagas/Cyberbugs/StatusSaga.js","redux/sagas/rootSaga.js","redux/reducers/HistoryReducer.js","redux/reducers/UserCyberBugsReducer.js","redux/reducers/ProjectCategoryReducer.js","redux/reducers/ProjectCyberBugsReducer.js","redux/reducers/DrawerCyberbugs.js","redux/reducers/ProjectReducer.js","redux/reducers/TaskTypeReducer.js","redux/reducers/PriorityReducer.js","redux/reducers/StatusReducer.js","redux/reducers/TaskReducer.js","redux/reducers/UserManagementReducer.js","redux/configStore.js","index.js"],"names":["module","exports","DOMAIN","DOMAIN_CYBERBUG","TOKEN","USER_LOGIN","STATUS_CODE","SUCCESS","NOT_FOUND","SERVER_ERROR","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","src","require","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","activeStyle","fontWeight","href","aria-haspopup","aria-labelledby","placeholder","About","BaiTapToDoListSaga","props","dispatch","useDispatch","taskList","ToDoListReducer","useState","values","taskName","errors","setState","addTask","e","preventDefault","useEffect","delTask","console","log","onClick","onSubmit","name","onChange","target","value","newValues","newErrors","test","trim","filter","item","status","map","index","key","history","createBrowserHistory","Contact","push","LoginCyberBugsWithFormik","withFormik","mapPropsToValues","email","password","validationSchema","Yup","shape","required","min","max","handleSubmit","setSubmitting","userLogin","singinCyberbugAction","displayName","touched","handleChange","handleBlur","style","height","window","innerHeight","fontSize","width","minWidth","size","prefix","UserOutlined","LockOutlined","htmlType","backgroundColor","color","icon","TwitterOutlined","connect","SlideDown","Component","propsSpring","useSpring","marginTop","from","config","duration","div","Login","userName","passWord","setUserLogin","event","newUserLogin","valid","goBack","localStorage","setItem","JSON","stringify","alert","when","message","location","Register","htmlFor","selected","DemoHOCModal","LoginWithSlideDown","Detail","match","params","path","PageNotFound","url","Profile","getItem","Todolist","getTaskList","promise","Axios","method","then","result","data","catch","err","response","renderTaskToDo","checkTask","renderTaskToDoDone","rejectTask","res","this","getTaskListApi","a","ToDoListRedux","rejectTaskApi","checkTaskApi","deleteTaskApi","TodolistRFC","HomeTemplate","restParam","render","propsRoute","Sider","Layout","Footer","Content","UserLoginTemplate","Math","round","innerWidth","setSize","onresize","restRoute","backgroundImage","backgroundSize","ContentMain","projectDetail","handleDragEnd","parse","draggableId","projectId","taskId","source","destination","droppableId","taskUpdateStatus","display","onDragEnd","lstTask","taskListDetail","statusId","provided","statusName","ref","innerRef","droppableProps","lstTaskDeTail","task","toString","draggableProps","dragHandleProps","priorityTask","priority","assigness","mem","avatar","alt","renderCardTaskList","HeaderMain","aria-current","projectName","InfoMain","ReactHtmlParser","description","members","user","renderAvatar","marginLeft","MenuCyberbugs","Select","Option","ModalCyberBugs","taskDetailModal","TaskReducer","arrStatus","StatusReducer","arrPriority","PriorityReducer","arrTaskType","TaskTypeReducer","ProjectReducer","visibleEditor","setVisibleEditor","historyContent","setHistoryContent","content","setContent","actionType","tabIndex","role","aria-hidden","typeId","tp","taskType","paddingRight","cursor","data-dismiss","jsxDescription","initialValue","init","selector","menubar","plugins","toolbar","onEditorChange","editor","renderDescription","background","marginBottom","userId","options","findIndex","us","label","optionFilterProp","onSelect","userSelected","find","priorityId","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","aria-valuenow","aria-valuemin","aria-valuemax","justifyContent","renderTimeTracking","children","i","frmCreateTask","enableReinitialize","arrProject","listUserAsign","taskObject","ProjectCyberBugsReducer","arrUser","UserLoginCyberBugsReducer","userOptions","setFieldValue","setValues","React","timeTracking","setTimetracking","submitFunction","keyWord","idProject","project","statusItem","mode","defaultValue","SidebarCyberbugs","collapsed","trigger","collapsible","BarsOutlined","theme","defaultSelectedKeys","Item","PlusOutlined","title","SearchOutlined","CyberbugsTemplate","IndexCyberBugs","createProjectForm","categoryId","arrProjectCategory","newProject","ProjectCategoryReducer","projectCategoryName","EditProjectForm","projectEdit","prjectUpdate","disabled","ProjectManagement","projectList","userSearch","setValue","searchRef","useRef","filteredInfo","sortedInfo","columns","dataIndex","sorter","item2","item1","sortDirections","text","record","projectName1","toLowerCase","categoryName1","categoryName","creator","creator1","slice","member","placement","borderRadius","userProject","length","valueSelect","option","onSearch","current","clearTimeout","setTimeout","projectEditModel","FormOutlined","onConfirm","okText","cancelText","DeleteOutlined","order","columnKey","rowKey","dataSource","pagination","filters","DrawerCyberBugs","drawerReducer","visible","ComponentContentDrawer","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","textAlign","marginRight","DemoDragDrop","setTaskList","tagDrag","tagDragEnter","bottom","reset","set","handleDragStart","handleDragEnter","taskDragEnter","taskListUpdate","indexDragTag","indexDragEnter","temp","onDragOver","stopPropagation","onDrop","cssDragTag","position","interpolate","numBottom","onDragStart","onDragEnter","draggable","Demo","rotate","cssDrag","cssDragEnter","transform","r","onDragLeave","DragAndDropDnD","toDo","items","inProgress","done","itemCopy","splice","_","statusTask","phoneNumber","userSignup","singupCyberbugAction","UserManagement","userList","UserManagementReducer","App","useHistory","exact","LoginCyberBugs","indexCyberBugs","CreateProject","SigninCyberBugs","component","Boolean","hostname","initialState","stateDefault","toDoListService","getTaskApi","addTaskApi","checkDoneTask","getTaskApiAction","theoDoiActionGetTaskApi","addTaskApiAction","theoDoiActionAddTaskApi","theoDoiActionDeleteTask","checkDoneTaskApi","theoDoiDoneTask","theoDoiRejectTask","action","put","call","delay","takeLatest","default","cyberbugsService","headers","Authorization","projectUpdate","baseService","model","post","get","delete","userService","getUser","assignUserProject","getUserManagent","deleteUserFromProject","getUserByProjectId","signinSaga","theoDoiSignin","signupSaga","theoDoiSignup","getUserSaga","theoDoiGetUser","getUserManagementSaga","theoDoiGetUserSaga","addUserProjectSaga","theoDoiAddUserProject","removeUserProjectSaga","theoDoiRemoveUserProject","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","accessToken","lstUserSearch","statusCode","getAllProjectCategorySaga","theoDoigetAllProjectCategory","projectService","getAllProject","deleteProject","getProjectDetail","notifiFunction","notification","createProjectSaga","theoDoiCreateProjectSaga","getListProjectSaga","theoDoiGetListProjectSaga","updateProjectSaga","theoDoiUpdateProjectSaga","deleteProjectSaga","theoDoiDeleteProject","getProjectDetailSaga","theoDoiGetProjectDetail","getProjectAllSaga","theoDoiGetAllProjectSaga","taskTypeService","getAllTaskType","getAllTaskTypeSaga","theoDoiGetAllTaskTypeSaga","priorityService","getAllPriority","getAllPrioritySaga","theoDoiGetAllPriority","taskService","createTask","getTaskDetail","updateStatusTask","taskStatusUpdate","updateTask","taskUpdate","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","updateTaskStatusSaga","theoDoiUpdateTaskStatusSaga","updateTaskSaga","theoDoiUdpateTask","handelChangePostApi","theoDoiHandleChangePostApi","select","taskUpdateApi","statusService","getAllStatus","getAllStatusSaga","theoDoiGetAllStatusSaga","rootSaga","all","ToDoListSaga","Cyberbugs","ProjectCategorySaga","ProjectSaga","StatusSaga","TaskTypeSaga","PrioritySaga","TaskSaga","historyState","usLogin","propsValue","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","ModalReducer","HistoryReducer","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4a2ab613.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","export const DOMAIN = 'http://svcy.myclass.vn/api';\n\nexport const DOMAIN_CYBERBUG = 'http://casestudy.cyberlearn.vn/api/';\n\nexport const TOKEN = 'ACCESSTOKEN';\nexport const USER_LOGIN = 'USER_LOGIN';\n\nexport const STATUS_CODE = {\n    SUCCESS : 200,\n    NOT_FOUND: 404,\n    SERVER_ERROR:500\n}\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/download (1).e96d3ef9.jfif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__3eULL\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","module.exports = __webpack_public_path__ + \"static/media/download.1c8cee9f.jfif\";","import React from 'react'\nimport styleLoading from './LoadingComponent.module.css';\nimport { useSelector } from 'react-redux'\n\nexport default function LoadingComponent() {\n\n    const { isLoading } = useSelector(state => state.LoadingReducer)\n\n    if (isLoading) {\n        return (\n            <div className={styleLoading.bgLoading}>\n                <img src={require('../../../assets/imgLoading/loading.gif')} />\n            </div>\n        )\n    } else {\n        return ''\n    }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nexport default function Header() {\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/demohocmodal\">Demo HOC </NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistredux\">To do list redux</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistsaga\">To do list saga</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/dragdrop\">DemoDragDrop</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/demo\">Demo</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/demodragdropdnd\">Drag Drop DnD</NavLink>\n                            \n                            \n                        </div>\n                    </li>\n\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nimport {useDispatch,useSelector} from 'react-redux';\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, REJECT_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function BaiTapToDoListSaga(props) {\n\n    const dispatch = useDispatch(); \n    const {taskList} = useSelector(state => state.ToDoListReducer)\n\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        //Dispatch action saga\n        dispatch({\n            type:GET_TASKLIST_API,\n           \n        })\n    }\n\n    const addTask = (e) => {\n        e.preventDefault();\n        dispatch({\n            type:ADD_TASK_API,\n            taskName: state.values.taskName\n        })\n    }\n\n    useEffect(() => {\n        //Gọi hàm getTaskList\n        getTaskList();\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch({\n            type:REJECT_TASK_API,\n            taskName\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n      dispatch({\n          type:CHECK_TASK_API,\n          taskName\n      })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        console.log(taskName)\n        dispatch({\n            type:DELETE_TASK_API,\n            taskName:taskName\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <button className=\"btn btn-success\" onClick={()=>{\n                dispatch({\n                    type:'getTaskApiAction'\n                })\n            }}>Dispatch action saga getTaskAPI</button>\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","//-----------action----------\nexport const GET_TASK_API = 'GET_TASK_API';\n\n//---------------saga--------------\n\nexport const GET_TASKLIST_API = 'GET_TASKLIST_API';\nexport const ADD_TASK_API = 'ADD_TASK_API';\nexport const CHECK_TASK_API = 'CHECK_TASK_API';\nexport const DELETE_TASK_API = 'DELETE_TASK_API';\nexport const REJECT_TASK_API = 'REJECT_TASK_API';\n\n\n\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import React from 'react'\nimport { history } from '../../util/history'\n\nexport default function Contact() {\n    return (\n        <div>\n            liên hệ\n          <button onClick={()=>{history.push('/demohocmodal')}}>123</button>\n\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Button, Input } from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  FacebookOutlined,\n  TwitterOutlined,\n} from \"@ant-design/icons\";\nimport { withFormik, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\nimport { USER_SIGNIN_API } from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\nimport { singinCyberbugAction } from \"../../../redux/actions/CyberBugsActions\";\nimport { history } from \"../../../util/history\";\nfunction LoginCyberBugs(props) {\n  const { values, touched, errors, handleChange, handleBlur, handleSubmit } =\n    props;\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"container\"\n      style={{ height: window.innerHeight }}\n    >\n      <div\n        className=\"d-flex flex-column justify-content-center align-items-center\"\n        style={{ height: window.innerHeight }}\n      >\n        <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>\n          Login cyberbugs\n        </h3>\n        <div className=\"d-flex mt-3\">\n          <Input\n            onChange={handleChange}\n            style={{ width: \"100%\", minWidth: 300 }}\n            name=\"email\"\n            size=\"large\"\n            placeholder=\"email\"\n            prefix={<UserOutlined />}\n          />\n        </div>\n        <div className=\"text-danger\">{errors.email}</div>\n        <div className=\"d-flex mt-3\">\n          <Input\n            onChange={handleChange}\n            style={{ width: \"100%\", minWidth: 300 }}\n            type=\"password\"\n            name=\"password\"\n            size=\"large\"\n            placeholder=\"password\"\n            prefix={<LockOutlined />}\n          />\n        </div>\n        <div className=\"text-danger\">{errors.password}</div>\n\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <Button\n              htmlType=\"submit\"\n              size=\"middle\"\n              style={{\n                minWidth: 100,\n                backgroundColor: \"rgb(102,117,223)\",\n                color: \"#fff\",\n              }}\n              className=\"mt-3\"\n            >\n              Login\n            </Button>\n          </div>\n          <div className=\"col-6\">\n            <Button\n              onClick={() => {\n                {\n                  history.push(\"/signup\");\n                }\n              }}\n              size=\"middle\"\n              style={{\n                minWidth: 100,\n                backgroundColor: \"rgb(102,117,223)\",\n                color: \"#fff\",\n              }}\n              className=\"mt-3\"\n            >\n              SignUp\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"social mt-3 d-flex\">\n          <Button\n            style={{ backgroundColor: \"rgb(59,89,152)\" }}\n            shape=\"circle\"\n            size={\"large\"}\n          >\n            <span className=\"font-weight-bold\" style={{ color: \"#fff\" }}>\n              F\n            </span>\n          </Button>\n          <Button\n            type=\"primary ml-3\"\n            shape=\"circle\"\n            icon={<TwitterOutlined />}\n            size={\"large\"}\n          ></Button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nconst LoginCyberBugsWithFormik = withFormik({\n  mapPropsToValues: () => ({\n    email: \"\",\n    password: \"\",\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required!\")\n      .email(\"email is invalid!\"),\n    password: Yup.string()\n      .min(6, \"password must have min 6 characters\")\n      .max(32, \"password  have max 32 characters\"),\n  }),\n  handleSubmit: ({ email, password }, { props, setSubmitting }) => {\n    // let action = {\n    //     type:USER_SIGNIN_API,\n    //     userLogin: {\n    //         email:values.email,\n    //         password:values.password\n    //     }\n    // }\n\n    setSubmitting(true);\n    props.dispatch(singinCyberbugAction(email, password));\n\n    // console.log(props)\n    // console.log(values);\n  },\n  displayName: \"LoginCyberBugs\",\n})(LoginCyberBugs);\n\nexport default connect()(LoginCyberBugsWithFormik);\n","import {\n  USER_SIGNIN_API,\n  USER_SIGNUP_API,\n} from \"../constants/Cyberbugs/Cyberbugs\";\n\nexport const singinCyberbugAction = (email, password) => {\n  return {\n    type: USER_SIGNIN_API,\n    userLogin: {\n      email: email,\n      password: password,\n    },\n  };\n};\nexport const singupCyberbugAction = (email, password, name, phoneNumber) => {\n  return {\n    type: USER_SIGNUP_API,\n    userSignup: {\n      email: email,\n      password: password,\n      name,\n      phoneNumber,\n    },\n  };\n};\n","export const USER_SIGNIN_API = \"USER_SIGNIN_API\";\nexport const USER_SIGNUP_API = \"USER_SIGNUP_API\";\n\n//------------------login ------\nexport const USLOGIN = \"USLOGIN\";\n\n//-------------get project category ---------\n\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = \"GET_ALL_PROJECT_CATEGORY_SAGA\";\n\nexport const GET_ALL_PROJECT_CATEGORY = \"GET_ALL_PROJECT_CATEGORY\";\n","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\n\nexport default function SlideDown(Component) {\n\n    const propsSpring = useSpring({\n        to: {\n            marginTop: '0'\n        }, from: {\n            marginTop: '-100px'\n\n        },config: {\n            duration:500\n        }\n    })\n\n\n    return (\n        <div>\n            <animated.div style={propsSpring}>\n                <Component />\n            </animated.div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Prompt } from 'react-router-dom';\n\n\n\n\nexport default function Login(props) {\n\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\n\n\n    console.log(userLogin)\n    const handleChange = (event) => {\n        const {name,value} = event.target;\n\n        const newUserLogin = {\n            ...userLogin,\n            [name]:value\n        };\n\n\n        let valid = true;\n        for(let key in newUserLogin) {\n            if(key !== 'status') {\n                if(newUserLogin[key].trim()===''){\n                    valid = false;\n                }\n            }\n        }\n\n        if(!valid) {\n            newUserLogin.status = true;\n        }else {\n            newUserLogin.status = false;\n        }\n\n        setUserLogin(newUserLogin);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\n            //Thành công thì chuyển về trang trước đó\n            // props.history.goBack();\n            //Chuyển đến trang chỉ định sau khi xử lý\n            // Chuyển hướng đến path tương ứng\n            //  props.history.push('/home');\n            //replace thay đổi nội dung path tương ứng\n            // props.history.replace('/home');\n            props.history.goBack();\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\n\n        }else {\n            alert('Login fail !')\n            return;\n        }\n    }\n\n    return (\n        <form className=\"container\" onSubmit={handleLogin}>\n            <h3 className=\"display-4\">Login</h3>\n            <div className=\"form-group\">\n                <p>User Name</p>\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n                <p>Password</p>\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n               <button className=\"btn btn-success\">Đăng nhập</button>\n            </div>\n            <Prompt when={userLogin.status} message={(location) => {\n                return 'Bạn có chắc muốn rời khỏi trang này !'\n            }} />\n        </form>\n    )\n}\n","import React from 'react'\n\nexport default function Register() {\n    return (\n        <form>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputEmail4\">Email</label>\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputPassword4\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress\">Address</label>\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress2\">Address 2</label>\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputCity\">City</label>\n                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"inputState\">State</label>\n                    <select id=\"inputState\" className=\"form-control\">\n                        <option selected>Choose...</option>\n                        <option>...</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-2\">\n                    <label htmlFor=\"inputZip\">Zip</label>\n                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                        Check me out\n      </label>\n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n        </form>\n\n    )\n}\n","import React from 'react'\nimport {useDispatch} from 'react-redux'\nimport SlideDown from '../../HOC/Modal/SlideDown';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\n\n\n\n\nexport default function DemoHOCModal() {\n    const LoginWithSlideDown = () =>  new SlideDown(Login);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {/* Button trigger modal */}\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component: <Login />\n                })\n\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng nhập\n            </button>\n\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component:<Register />\n                })\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng ký\n            </button>\n\n            <LoginWithSlideDown />\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Detail(props) {\n\n    return (\n        <div>\n            Giá trị tham số: {props.match.params.id}\n            <br />\n            Path name hiện tại: {props.match.path}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function PageNotFound(props) {\n    return (\n        <div>\n            Không tìm thấy trang {props.match.url}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default function Profile(props) {\n\n\n    if (localStorage.getItem('userLogin')) {\n        return (\n            <div>\n                profile\n            </div>\n        )\n    }else {\n        alert('Vui lòng đăng nhập để vào trang này !');\n        return <Redirect to=\"/login\" />\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport style from './Todolist.css'\n\nexport default class Todolist extends Component {\n\n    state = {\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    }\n\n    getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            this.setState({\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    renderTaskToDo = () => {\n        return this.state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={()=>{\n                        this.checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    \n    renderTaskToDoDone = () => {\n        return this.state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button  type=\"button\" className=\"complete\" onClick={()=>{\n                        this.rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    //Xử lý reject task\n    rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n    checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            this.getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    //Hàm sẽ tự động thực thi sau khi nội dung component được render\n    componentDidMount() {\n        this.getTaskList();\n    }\n\n\n    handleChange = (e) => {\n        let { value, name } = e.target;\n        console.log(value, name);\n        let newValues = { ...this.state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...this.state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        this.setState({\n            ...this.state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n    addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(this.state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: this.state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            this.getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.addTask}>\n                {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\n                <div className=\"card\">\n                    <div className=\"card__header\">\n                        <img src={require('./bg.png')} />\n                    </div>\n                    {/* <h2>hello!</h2> */}\n                    <div className=\"card__body\">\n                        <div className=\"card__content\">\n                            <div className=\"form-group\">\n                                <div className=\"card__title\">\n                                    <h2>My Tasks</h2>\n                                    <p>September 9,2020</p>\n                                </div>\n                                <div className=\"card__add\">\n                                    <input name=\"taskName\" onChange={this.handleChange} id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\n\n                                    <button id=\"addItem\" onClick={this.addTask}>\n                                        <i className=\"fa fa-plus\" />\n                                    </button>\n                                </div>\n                                <span className=\"text text-danger\">{this.state.errors.taskName}</span>\n                            </div>\n\n                            <div className=\"card__todo form-group\">\n                                {/* Uncompleted tasks */}\n                                <ul className=\"todo\" id=\"todo\">\n                                    {this.renderTaskToDo()}\n                                </ul>\n                                {/* Completed tasks */}\n                                <ul className=\"todo\" id=\"completed\">\n                                    {this.renderTaskToDoDone()}\n\n                                    {/* <li>\n                                    <span>Ăn sáng</span>\n                                    <div className=\"buttons\">\n                                        <button className=\"remove\">\n                                            <i className=\"fa fa-trash-alt\" />\n                                        </button>\n                                        <button className=\"complete\">\n                                            <i className=\"far fa-check-circle\" />\n                                            <i className=\"fas fa-check-circle\" />\n                                        </button>\n                                    </div>\n                                </li> */}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n","import Axios from \"axios\";\nimport Profile from \"../../pages/Profile/Profile\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\";\n\n\n//Action có 2 loại\n//Action thực thi ngay làm thay đổi reducer (action 1)\n//Action phải thực hiện xử lý rồi mới gọi action 1 thực thi (async action)\n\nexport const getTaskListApi = () => {\n\n    //Tiền xử lý dữ liệu => xử lý function \n    return async dispatch => {\n\n        try {\n            let { data, status, ...res } = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n                method: 'GET'\n            });\n            if (status === 200) {\n                dispatch({\n                    type: GET_TASK_API,\n                    taskList: data\n                })\n            }\n        } catch (err) {\n            console.log(err.response.data)\n        }\n\n        // console.log('promise',res.data)\n        // promise.then((result) => {\n        //     console.log(result.data);\n        //     //Nếu gọi api lấy về kết quả thành công \n        //     //=> set lại state của component\n        //     dispatch({\n        //         type: GET_TASK_API,\n        //         taskList: result.data\n        //     })\n\n        //     console.log('thành công')\n        // });\n\n\n        // promise.catch((err) => {\n        //     console.log('thất bại')\n        //     console.log(err.response.data)\n        // });\n    }\n}\n\n\n\nexport const addTaskApi = (taskName) => {\n    return async dispatch => {\n\n        try {\n            //Xử lý trước khi dispatch\n            let {status,data} = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n                method: 'POST',\n                data: { taskName: taskName }\n            });\n            // console.log('res',res)\n            if (status === 200) {\n                dispatch(getTaskListApi())\n            }\n        }catch(err){\n            console.log(err.response.data);\n        }\n        // //Xử lý thành công\n        // promise.then(result => {\n        //     // alert(result.data);\n        //     dispatch(getTaskListApi());\n\n        // })\n\n        // //Xử lý thất bại\n        // promise.catch(errors => {\n        //     alert(errors.response.data)\n\n        // })\n\n\n    }\n}\n\n\nexport const deleteTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            //Sau khi thực hiện api gọi phương thức dispatchAction get TaskListApi để load lại task\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n}\n\nexport const checkTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\nexport const rejectTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            alert(res.data);\n            dispatch(getTaskListApi());\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\n\n\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport { addTaskApi, deleteTaskApi, getTaskListApi,checkTaskApi, rejectTaskApi } from '../../redux/actions/ToDoListAction';\nimport { GET_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function ToDoListRedux(props) {\n    \n    //Lấy tasklist từ redux về\n    const {taskList} = useSelector(state => state.ToDoListReducer);\n    const dispatch = useDispatch();\n\n    let [state, setState] = useState({\n     \n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n       dispatch(getTaskListApi())\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        //Xử lý nhận dữ liệu từ người dùng nhập => gọi action addTaskApi()\n        dispatch(addTaskApi(state.values.taskName))\n       \n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch(rejectTaskApi(taskName));\n\n    }\n\n    //Xử lý done task\n   const checkTask = (taskName) => {\n        dispatch(checkTaskApi(taskName))\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        dispatch(deleteTaskApi(taskName))\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n\n\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nexport default function TodolistRFC(props) {\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            setState({\n                ...state,\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","import React,{Fragment} from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../../components/Home/Header/Header';\n\n\n\n\nexport const HomeTemplate = (props) => {\n\n    const {Component,...restParam} = props;\n    return <Route {...restParam} render={(propsRoute)=>{\n        return <>\n            <Header />\n            <Component {...propsRoute} />\n        </>\n    }} />\n\n}","import React,{useState,useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport { Button,Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\n\n\n\n\n\nexport const UserLoginTemplate = (props) => {\n\n    const [{width,height},setSize] = useState({width:Math.round(window.innerWidth),height:Math.round(window.innerHeight)});\n\n    useEffect(()=>{\n        window.onresize = () => {\n            setSize({\n                width: Math.round(window.innerWidth),\n                height:Math.round(window.innerHeight)\n            })\n        }\n    },[])\n\n\n    let {Component,...restRoute} =  props;\n\n    return <Route {...restRoute} render={(propsRoute)=>{\n        return <>\n            <Layout>\n                <Sider width={width/2} style={{height:height,backgroundImage:`url(https://picsum.photos/${Math.round(width/2)}/${height})`,backgroundSize:'100%'}}>\n                  \n                </Sider>\n                <Content>\n                    <Component {...propsRoute} />\n                </Content>\n            </Layout>\n      \n        </>\n    }} />\n\n}","import React from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport { useDispatch } from 'react-redux'\nimport { GET_TASK_DETAIL_SAGA, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/Cyberbugs/TaskConstants';\nexport default function ContentMain(props) {\n\n    const { projectDetail } = props;\n    const dispatch = useDispatch();\n\n    const handleDragEnd = (result) => {\n        let {projectId,taskId} = JSON.parse( result.draggableId ); //Lấy ra chuỗi sau mỗi lần draggable\n\n        console.log({projectId,taskId} )\n        let { source, destination } = result;\n        if (!result.destination) {\n            return;\n        }\n        if (source.index === destination.index && source.droppableId === destination.droppableId) {\n            return;\n        }\n        \n        \n\n        //gọi api cập nhật lại status\n        dispatch({\n            type: UPDATE_STATUS_TASK_SAGA,\n            taskUpdateStatus: {\n                \"taskId\": taskId,\n                \"statusId\": destination.droppableId,\n                \"projectId\":projectId\n            }\n        })\n    }\n\n    const renderCardTaskList = () => {\n        return <DragDropContext onDragEnd={handleDragEnd}>\n            {\n                projectDetail.lstTask?.map((taskListDetail, index) => {\n                    return <Droppable key={index} droppableId={taskListDetail.statusId}>\n                        {(provided) => {\n                            return <div className=\"card pb-2\" style={{ width: '17rem', height: 'auto' }} >\n                                <div className=\"card-header\">\n                                    {taskListDetail.statusName}\n                                </div>\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                    key={index}\n                                    className=\"list-group list-group-flush\" style={{ height: '100%' }}>\n                                    {taskListDetail.lstTaskDeTail.map((task, index) => {\n                                        return <Draggable key={task.taskId.toString()} index={index} draggableId={JSON.stringify({projectId:task.projectId,taskId:task.taskId})}>\n                                            {(provided) => {\n                                                return <div\n                                                    ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                    key={index} className=\"list-group-item\" data-toggle=\"modal\" data-target=\"#infoModal\" onClick={() => {\n                                                        dispatch({ type: GET_TASK_DETAIL_SAGA, taskId: task.taskId });\n\n                                                    }}>\n                                                    <p className=\"font-weight-300\">\n                                                        {task.taskName}\n                                                    </p>\n                                                    <div className=\"block\" style={{ display: 'flex' }}>\n                                                        <div className=\"block-left\">\n                                                            <p className=\"text-danger\">{task.priorityTask.priority}</p>\n                                                            {/* <i className=\"fa fa-bookmark\" />\n                                        <i className=\"fa fa-arrow-up\" /> */}\n                                                        </div>\n                                                        <div className=\"block-right\">\n                                                            <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                                                                {task.assigness.map((mem, index) => {\n                                                                    return <div className=\"avatar\" key={index}>\n                                                                        <img src={mem.avatar} alt={mem.avatar} />\n                                                                    </div>\n                                                                })}\n\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            }}\n                                        </Draggable>\n                                    })}\n\n                                    {provided.placeholder}\n\n                                </div>\n\n\n\n                            </div>\n                        }}\n\n                    </Droppable>\n                })}\n\n        </DragDropContext>\n    }\n\n    return (\n        <div className=\"content\" style={{ display: 'flex' }}>\n\n            {renderCardTaskList()}\n        </div>\n\n\n    )\n}\n\n\n\n{/* <div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\n<div className=\"card-header\">\n    SELECTED FOR DEVELOPMENT 2\n</div>\n<ul className=\"list-group list-group-flush\">\n    <li className=\"list-group-item\">Cras justo odio</li>\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\n</ul>\n</div>\n<div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\n<div className=\"card-header\">\n    IN PROGRESS 2\n</div>\n<ul className=\"list-group list-group-flush\">\n    <li className=\"list-group-item\">Cras justo odio</li>\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\n</ul>\n</div>\n<div className=\"card\" style={{ width: '17rem', height: '25rem' }}>\n<div className=\"card-header\">\n    DONE 3\n</div>\n<ul className=\"list-group list-group-flush\">\n    <li className=\"list-group-item\">Cras justo odio</li>\n    <li className=\"list-group-item\">Dapibus ac facilisis in</li>\n    <li className=\"list-group-item\">Vestibulum at eros</li>\n</ul>\n</div> */}","export const GET_TASK_DETAIL_SAGA = 'GET_TASK_DETAIL_SAGA';\nexport const GET_TASK_DETAIL = 'GET_TASK_DETAIL';\n\n\nexport const CHANGE_TASK_MODAL = 'CHANGE_TASK_MODAL';\nexport const CHANGE_ASSIGNESS = 'CHANGE_ASSIGNESS';\nexport const REMOVE_USER_ASSIGN = 'REMOVE_USER_ASSIGN'\n\nexport const UPDATE_STATUS_TASK_SAGA = 'UPDATE_STATUS_TASK_SAGA';\n\n\nexport const UPDATE_TASK_SAGA = 'UPDATE_TASK_SAGA';\nexport const HANDLE_CHANGE_POST_API_SAGA = 'HANDLE_CHANGE_POST_API_SAGA';","import React from 'react'\n\nexport default function HeaderMain(props) {\n\n    const {projectDetail} = props;\n\n    return (\n        <div className=\"header\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\" style={{ backgroundColor: 'white' }}>\n                    <li className=\"breadcrumb-item\">Project</li>\n                    <li className=\"breadcrumb-item\">CyberLearn</li>\n                    <li className=\"breadcrumb-item\">Project management</li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        {projectDetail.projectName}\n                    </li>\n                </ol>\n            </nav>\n            \n\n        </div>\n\n\n    )\n}\n","import React from 'react'\nimport ReactHtmlParser from \"react-html-parser\";\n\n\nexport default function InfoMain(props) {\n\n    const {projectDetail} = props;\n\n    const renderAvatar = () => {\n        \n        \n        return projectDetail.members?.map((user,index) => {\n            return   <div key={index} className=\"avatar\">\n            <img src={user.avatar} alt={user.avatar} />\n        </div>\n        })\n    }\n\n\n    return (\n        <>\n            <h3>{projectDetail.projectName}</h3>\n\n            <section>\n                {ReactHtmlParser(projectDetail.description)}\n            </section>\n            <div className=\"info\" style={{ display: 'flex' }}>\n                <div className=\"search-block\">\n                    <input className=\"search\" />\n                    <i className=\"fa fa-search\" />\n                </div>\n                <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                    {renderAvatar()}\n                </div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Only My Issues</div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Recently Updated</div>\n            </div>\n        </>\n\n    )\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function MenuCyberbugs() {\n  return (\n    <div className=\"menu\">\n      <div className=\"account\">\n        <div className=\"avatar\">\n          <img src={require(\"../../assets/img/download.jfif\")} alt=\"123\" />\n        </div>\n        <div className=\"account-info\">\n          <p>CyberLearn.vn</p>\n          <p>Report bugs</p>\n        </div>\n      </div>\n      <div className=\"control\">\n        <div>\n          <i className=\"fa fa-credit-card mr-1\" />\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/cyberbugs\"\n            activeClassName=\"active font-weight-bold text-primary\"\n          >\n            Cyber Board\n          </NavLink>\n        </div>\n        <div>\n          <i className=\"fa fa-cog mr-1\" />\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/projectmanagement\"\n            activeClassName=\"active font-weight-bold  text-primary\"\n          >\n            Project management\n          </NavLink>\n        </div>\n        <div>\n          <i className=\"fa fa-cog mr-1\" />\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/createproject\"\n            activeClassName=\"active font-weight-bold  text-primary\"\n          >\n            Create project\n          </NavLink>\n        </div>\n        <div>\n          <i className=\"fa fa-cog mr-1\" />\n          <NavLink\n            className=\"text-dark\"\n            activeStyle={{ color: \"blue\" }}\n            to=\"/usermanagement\"\n            activeClassName=\"active font-weight-bold  text-primary\"\n          >\n            User Management\n          </NavLink>\n        </div>\n      </div>\n      <div className=\"feature\">\n        <div>\n          <i className=\"fa fa-truck mr-1\" />\n          <span>Releases</span>\n        </div>\n        <div>\n          <i className=\"fa fa-equals mr-1\" />\n          <span>Issues and filters</span>\n        </div>\n        <div>\n          <i className=\"fa fa-paste mr-1\" />\n          <span>Pages</span>\n        </div>\n        <div>\n          <i className=\"fa fa-location-arrow mr-1\" />\n          <span>Reports</span>\n        </div>\n        <div>\n          <i className=\"fa fa-box\" />\n          <span>Components</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const GET_ALL_STATUS_SAGA = 'GET_ALL_STATUS_SAGA';\nexport const GET_ALL_STATUS = 'GET_ALL_STATUS';","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/constants/Cyberbugs/StatusConstant';\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\nimport { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/Cyberbugs/TaskConstants';\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\nimport { Editor } from '@tinymce/tinymce-react'\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n\nexport default function ModalCyberBugs(props) {\n\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\n    const { arrStatus } = useSelector(state => state.StatusReducer);\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\n\n    const { projectDetail } = useSelector(state => state.ProjectReducer)\n    const [visibleEditor, setVisibleEditor] = useState(false);\n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\n    const [content, setContent] = useState(taskDetailModal.description);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: GET_ALL_STATUS_SAGA });\n        dispatch({ type: GET_ALL_PRIORITY_SAGA });\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA });\n    }, [])\n\n\n    console.log('taskDetailModal', taskDetailModal)\n\n\n    const renderDescription = () => {\n        const jsxDescription = ReactHtmlParser(taskDetailModal.description);\n        return <div>\n            {visibleEditor ? <div> <Editor\n                name=\"description\"\n                initialValue={taskDetailModal.description}\n                init={{\n                    selector: 'textarea#myTextArea',\n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                        'advlist autolink lists link image charmap print preview anchor',\n                        'searchreplace visualblocks code fullscreen',\n                        'insertdatetime media table paste code help wordcount'\n                    ],\n                    toolbar:\n                        'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                }}\n                onEditorChange={(content, editor) => {\n                    setContent(content);\n                }}\n            />\n\n                <button className=\"btn btn-primary m-2\" onClick={() => {\n                    dispatch({\n                        type:HANDLE_CHANGE_POST_API_SAGA,\n                        actionType:CHANGE_TASK_MODAL,\n                        name: 'description',\n                        value: content\n                    })\n                    setVisibleEditor(false);\n                }}>Save</button>\n                <button className=\"btn btn-primary m-2\" onClick={() => {\n                    dispatch({\n                        type:HANDLE_CHANGE_POST_API_SAGA,\n                        actionType:CHANGE_TASK_MODAL,\n                        name: 'description',\n                        value: historyContent\n                    })\n                   \n                //    dispatch({\n                //         type: CHANGE_TASK_MODAL,\n                //         name: 'description',\n                //         value: historyContent\n                //     })\n                    setVisibleEditor(false)\n                }}>Close</button>\n            </div> : <div onClick={() => {\n\n                setHistoryContent(taskDetailModal.description);\n                setVisibleEditor(!visibleEditor);\n\n            }}>{jsxDescription}</div>}\n\n\n        </div>\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n\n        dispatch({\n            type:HANDLE_CHANGE_POST_API_SAGA,\n            actionType:CHANGE_TASK_MODAL,\n            name,\n            value\n        })\n        \n        // dispatch({\n        //     type: CHANGE_TASK_MODAL,\n        //     name,\n        //     value\n        // });\n\n        \n    }\n    const renderTimeTracking = () => {\n\n        const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\n\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining);\n        const percent = Math.round(Number(timeTrackingSpent) / max * 100)\n\n        return <div>\n            <div style={{ display: 'flex' }}>\n                <i className=\"fa fa-clock\" />\n                <div style={{ width: '100%' }}>\n\n                    <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <p className=\"logged\">{Number(timeTrackingRemaining)}h logged</p>\n                        <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h remaining</p>\n                    </div>\n                </div>\n\n\n            </div>\n            <div className=\"row\">\n\n                <div className=\"col-6\">\n                    <input className=\"form-control\" name=\"timeTrackingSpent\" onChange={handleChange} />\n                </div>\n                <div className=\"col-6\">\n                    <input className=\"form-control\" name=\"timeTrackingRemaining\" onChange={handleChange} />\n                </div>\n            </div>\n        </div>\n    }\n\n    return (\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-info\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <div className=\"task-title\">\n                            <i className=\"fa fa-bookmark\" />\n                            <select name=\"typeId\" value={taskDetailModal.typeId} onChange={handleChange}>\n                                {arrTaskType.map((tp, index) => {\n                                    return <option key={index} value={tp.id}>{tp.taskType}</option>\n                                })}\n                            </select>\n\n                            <span>{taskDetailModal.taskName}</span>\n                        </div>\n                        <div style={{ display: 'flex' }} className=\"task-click\">\n                            <div>\n                                <i className=\"fab fa-telegram-plane\" />\n                                <span style={{ paddingRight: 20 }}>Give feedback</span>\n                            </div>\n                            <div>\n                                <i className=\"fa fa-link\" />\n                                <span style={{ paddingRight: 20 }}>Copy link</span>\n                            </div>\n                            <i className=\"fa fa-trash-alt='xyz'\" style={{ cursor: 'pointer' }} />\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-8\">\n                                    <p className=\"issue\">This is an issue of type: Task.</p>\n                                    <div className=\"description\">\n                                        <p>Description</p>\n                                        {renderDescription()}\n                                    </div>\n                                    <div className=\"comment\">\n                                        <h6>Comment</h6>\n                                        <div className=\"block-comment\" style={{ display: 'flex' }}>\n                                            <div className=\"avatar\">\n                                                <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                            </div>\n                                            <div className=\"input-comment\">\n                                                <input type=\"text\" placeholder=\"Add a comment ...\" />\n                                                <p>\n                                                    <span style={{ fontWeight: 500, color: 'gray' }}>Protip:</span>\n                                                    <span>press\n                        <span style={{ fontWeight: 'bold', background: '#ecedf0', color: '#b4bac6' }}>M</span>\n                        to comment</span>\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"lastest-comment\">\n                                            <div className=\"comment-item\">\n                                                <div className=\"display-comment\" style={{ display: 'flex' }}>\n                                                    <div className=\"avatar\">\n                                                        <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                                    </div>\n                                                    <div>\n                                                        <p style={{ marginBottom: 5 }}>\n                                                            Lord Gaben <span>a month ago</span>\n                                                        </p>\n                                                        <p style={{ marginBottom: 5 }}>\n                                                            Lorem ipsum dolor sit amet, consectetur\n                                                            adipisicing elit. Repellendus tempora ex\n                                                            voluptatum saepe ab officiis alias totam ad\n                                                            accusamus molestiae?\n                        </p>\n                                                        <div>\n                                                            <span style={{ color: '#929398' }}>Edit</span>\n                          •\n                          <span style={{ color: '#929398' }}>Delete</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"status\">\n                                        <h6>STATUS</h6>\n                                        <select name=\"statusId\" className=\"custom-select\" value={taskDetailModal.statusId} onChange={(e) => {\n\n                                            handleChange(e)\n\n                                            // const action = {\n                                            //     type:UPDATE_STATUS_TASK_SAGA,\n                                            //     taskUpdateStatus: {\n                                            //         taskId:taskDetailModal.taskId,\n                                            //         statusId:e.target.value,\n                                            //         projectId:taskDetailModal.projectId\n\n                                            //     }\n                                            // }\n\n                                            // // // console.log('action',action);\n                                            // console.log('taskupdatestatus',{\n                                            //     taskId:taskDetailModal.taskId,\n                                            //     statusId:e.target.value\n                                            // })\n\n                                            // dispatch(action)\n\n\n                                        }}>\n                                            {arrStatus.map((status, index) => {\n                                                return <option value={status.statusId} key={index}>{status.statusName}</option>\n                                            })}\n                                        </select>\n                                    </div>\n                                    <div className=\"assignees\">\n                                        <h6>ASSIGNEES</h6>\n                                        <div className=\"row\">\n                                            {\n                                                taskDetailModal.assigness?.map((user, index) => {\n                                                    return <div className=\"col-6  mt-2 mb-2\" key={index}>\n                                                        <div key={index} style={{ display: 'flex' }} className=\"item\">\n\n\n                                                            <div className=\"avatar\">\n                                                                <img src={user.avatar} alt={user.avatar} />\n                                                            </div>\n                                                            <p className=\"name mt-1 ml-1\">\n                                                                {user.name}\n                                                                <i className=\"fa fa-times\" style={{ marginLeft: 5,cursor:'pointer' }}  onClick={() => {\n                                                                    \n                                                                    dispatch({\n                                                                        type:HANDLE_CHANGE_POST_API_SAGA,\n                                                                        actionType: REMOVE_USER_ASSIGN,\n                                                                        userId:user.id\n                                                                    })\n                                                                    \n                                                                    // dispatch({\n                                                                    //     type:REMOVE_USER_ASSIGN,\n                                                                    //     userId:user.id\n                                                                    // })\n                                                                }}  />\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                })\n                                            }\n\n                                            <div className=\"col-6  mt-2 mb-2\">\n                                             \n                                                <Select \n                                                    options = {projectDetail.members?.filter(mem => {\n                                                        let index = taskDetailModal.assigness?.findIndex(us => us.id === mem.userId);\n                                                        if (index !== -1) {\n                                                            return false;\n                                                        }\n                                                        return true;\n                                                    }).map((mem, index) => {\n                                                        return {value:mem.userId,label:mem.name};\n                                                    })}\n                                                    optionFilterProp=\"label\"\n                                                    style={{ width: '100%' }}\n                                                    name=\"lstUser\"\n                                                    value=\"+ Add more\"\n                                                    className=\"form-control\"\n                                                    onSelect={(value) => {\n                                                        if (value == '0') {\n                                                            return;\n                                                        }\n                                                        let userSelected = projectDetail.members.find(mem => mem.userId == value);\n                                                        userSelected = { ...userSelected, id: userSelected.userId };\n\n                                                        dispatch({\n                                                            type:HANDLE_CHANGE_POST_API_SAGA,\n                                                            actionType: CHANGE_ASSIGNESS,\n                                                            userSelected\n                                                        })\n\n                                                        //dispatchReducer\n                                                        // dispatch({\n                                                        //     type: CHANGE_ASSIGNESS,\n                                                        //     userSelected\n                                                        // })\n                                                    }}>\n                                                    \n                                                    \n                                                </Select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"reporter\">\n                                        <h6>REPORTER</h6>\n                                        <div style={{ display: 'flex' }} className=\"item\">\n                                            <div className=\"avatar\">\n                                                <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                            </div>\n                                            <p className=\"name\">\n                                                Pickle Rick\n                    <i className=\"fa fa-times\" style={{ marginLeft: 5 }} />\n                                            </p>\n                                        </div>\n                                    </div> */}\n                                    <div className=\"priority\" style={{ marginBottom: 20 }}>\n                                        <h6>PRIORITY</h6>\n                                        <select name=\"priorityId\" className=\"form-control\" value={taskDetailModal.priorityId} onChange={(e) => {\n                                            handleChange(e);\n                                        }}>\n                                            {arrPriority.map((item, index) => {\n                                                return <option key={index} value={item.priorityId}>{item.priority}</option>\n                                            })}\n\n\n                                        </select>\n                                    </div>\n                                    <div className=\"estimate\">\n                                        <h6>ORIGINAL ESTIMATE (HOURS)</h6>\n                                        <input name=\"originalEstimate\" type=\"text\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate} onChange={(e) => {\n                                            handleChange(e);\n                                        }} />\n                                    </div>\n                                    <div className=\"time-tracking\">\n                                        <h6>TIME TRACKING</h6>\n                                        {\n                                            renderTimeTracking()\n                                        }\n\n                                    </div>\n                                    <div style={{ color: '#929398' }}>Create at a month ago</div>\n                                    <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n","export const GET_ALL_PRIORITY = 'GET_ALL_PRIORITY';\nexport const GET_ALL_PRIORITY_SAGA = 'GET_ALL_PRIORITY_SAGA';","export const GET_ALL_TASK_TYPE = 'GET_ALL_TASK_TYPE';\nexport const GET_ALL_TASK_TYPE_SAGA = 'GET_ALL_TASK_TYPE_SAGA';","import { Editor } from '@tinymce/tinymce-react'\nimport React, { useEffect, useState } from 'react'\nimport { Select, Radio,Slider } from 'antd';\nimport {useSelector,useDispatch,connect} from 'react-redux'\nimport { GET_ALL_PROJECT_SAGA } from '../../../redux/constants/Cyberbugs/ProjectCyberBugsConstants';\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\n\nimport {withFormik} from 'formik';\n\nimport * as Yup from 'yup'\nimport { GET_ALL_STATUS_SAGA } from '../../../redux/constants/Cyberbugs/StatusConstant';\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../../redux/constants/Cyberbugs/UserConstatnts';\nconst { Option } = Select;\n\nconst children = [];\n\nfor (let i = 10; i < 36; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n function FormCreateTask(props) {\n\n    //Lấy dữ liệu từ redux \n    const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\n    const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\n    const {arrPriority} = useSelector(state => state.PriorityReducer);\n    const {arrUser} = useSelector(state => state.UserLoginCyberBugsReducer);\n    const {arrStatus} = useSelector(state => state.StatusReducer);\n\n    console.log('arrStatus',arrStatus);\n    //Hàm biến đổi options cho thẻ select\n    const userOptions = arrUser.map((item,index) => {\n        return {value:item.userId,label:item.name}\n    })\n    //Do kết nối với withformik => component có các props\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    const dispatch = useDispatch();\n\n\n \n    \n    const [size, setSize] = React.useState('default');\n\n    const [timeTracking,setTimetracking] = useState({\n        timeTrackingSpent:0,\n        timeTrackingRemaining:0\n    })\n\n\n\n    //hook\n    useEffect(() => {\n        dispatch({type:GET_ALL_PROJECT_SAGA});\n        dispatch({type:GET_ALL_TASK_TYPE_SAGA});\n        dispatch({type:GET_ALL_PRIORITY_SAGA});\n        dispatch({type:GET_ALL_STATUS_SAGA});\n        //Đưa hàm handle submit lên drawer reducer để cập nhật lại sự kiện cho nút submitt\n        dispatch({type:'SET_SUBMIT_CREATE_TASK',submitFunction:handleSubmit})\n\n        dispatch({type:'GET_USER_API',keyWord:''});\n\n    },[])\n\n    \n    \n\n    const children = [];\n    return (\n        <form className=\"container\" onSubmit={handleSubmit}>          \n            <div className=\"form-group\">\n                <p>Project</p>\n                <select  name=\"projectId\" className=\"form-control\" onChange={(e) => {\n\n                    //dispatch giá trị làm thay đổi arrUser\n                    let {value} = e.target;\n                    dispatch({\n                        type:GET_USER_BY_PROJECT_ID_SAGA,\n                        idProject:value\n                    })\n                    //Cập nhật giá trị cho project Id\n                    setFieldValue('projectId',e.target.value);\n\n\n                }}>\n                   {arrProject.map((project,index)=>{\n                       return <option key={index} value={project.id}>{project.projectName}</option>\n                   })}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <p>Task name</p>\n                <input name=\"taskName\" className=\"form-control\" onChange={handleChange} />\n            </div> \n            <div className=\"form-group\">\n                <p>Status</p>\n                <select name=\"statusId\" className=\"form-control\" onChange={handleChange}>\n                    {arrStatus.map((statusItem,index) => {\n                        return <option key={index} value={statusItem.statusId}>{statusItem.statusName}</option>\n                    })}\n                </select>\n            </div> \n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <p>Priority</p>\n                        <select name=\"priorityId\" className=\"form-control\" onChange={handleChange}>\n                            {arrPriority.map((priority,index)=>{\n                                return <option key={index} value={priority.priorityId}>\n                                    {priority.priority}\n                                </option>\n                            })}\n                        </select>\n                    </div>\n                    <div className=\"col-6\">\n                        <p>Task type</p>\n                        <select className=\"form-control\" name=\"typeId\" onChange={handleChange}>\n                            {arrTaskType.map((taskType,index)=>{\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\n                            })}\n                        </select>\n                    </div>\n                </div>\n                \n            </div>\n            <div className=\"form-group\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                    <p>Assignees</p>\n                    <Select\n                            \n                            mode=\"multiple\"\n                            size={size}\n                            options={userOptions}\n                            placeholder=\"Please select\"\n                            optionFilterProp=\"label\"\n                            onChange={(values) => {\n                                //set lại giá trị cho lstUserAsign\n                                setFieldValue('listUserAsign',values);\n                            }}\n                            onSelect={(value) => { \n\n                              console.log(value)\n                        \n                            }}\n                            style={{ width: '100%' }}\n                        >\n                            {children}\n                    </Select>\n                    <div className=\"row mt-3\">\n                        <div className=\"col-12\">\n                            <p>Original Estimate</p>\n                            <input type=\"number\" min=\"0\" name=\"originalEstimate\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange={handleChange}/>\n                        </div>\n                    </div>\n\n                    </div>\n                    <div className=\"col-6\">\n                         <p>Time tracking</p>\n\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />\n                        <div className=\"row\">\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h remaining</div>\n                        </div>\n                        <div className=\"row\" style={{marginTop:5}}>\n                            <div className=\"col-6\">\n                                <p>Time spent</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingSpent\" onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingSpent:e.target.value\n                                    });\n\n                                    setFieldValue('timeTrackingSpent',e.target.value);\n                                }}/>\n                            </div>\n\n                            <div className=\"col-6\">\n                                <p>Time remaining</p>\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\"  onChange={(e)=>{\n                                    setTimetracking({\n                                        ...timeTracking,\n                                        timeTrackingRemaining:e.target.value\n                                    });\n                                    setFieldValue('timeTrackingRemaining',e.target.value);\n\n                                }}/>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <p>Description</p>\n                <Editor\n                    name=\"description\"\n                    init={{\n                        selector: 'textarea#myTextArea',\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                            'advlist autolink lists link image charmap print preview anchor',\n                            'searchreplace visualblocks code fullscreen',\n                            'insertdatetime media table paste code help wordcount'\n                        ],\n                        toolbar:\n                            'undo redo | formatselect | bold italic backcolor | \\\n                            alignleft aligncenter alignright alignjustify | \\\n                            bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={(content, editor) => {\n                            setFieldValue('description',content);\n                        }}\n                />\n            </div>\n            {/* <button type=\"submit\">submit</button> */}\n        </form>\n    )\n}\n\n\n\n\n\nconst frmCreateTask = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        const {arrProject,arrTaskType,arrPriority,arrStatus} = props;\n\n\n        // if(arrProject?.length>0){\n        //     props.dispatch({type:GET_USER_BY_PROJECT_ID_SAGA,idProject:arrProject[0]?.id});\n        // }\n\n\n        return {\n            taskName: '',\n            description: '',\n            statusId: arrStatus[0]?.statusId,\n            originalEstimate: 0,\n            timeTrackingSpent:0,\n            timeTrackingRemaining:0,\n            projectId:arrProject[0]?.id,\n            typeId:arrTaskType[0]?.id,\n            priorityId:arrPriority[0]?.priorityId,\n            listUserAsign:[]\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n        props.dispatch({type:'CREATE_TASK_SAGA',taskObject:values})\n        console.log('taskobject',values)\n    },\n    displayName: 'createTaskForm',\n})(FormCreateTask);\n\n// const {arrProject} = useSelector(state=>state.ProjectCyberBugsReducer);\n// const {arrTaskType} = useSelector(state=>state.TaskTypeReducer);\n// const {arrPriority} = useSelector(state => state.PriorityReducer);\n// const {userSearch} = useSelector(state => state.UserLoginCyberBugsReducer);\n// const {arrStatus} = useSelector(state => state.StatusReducer);\nconst mapStateToProps = (state) => {\n    return {\n        arrProject: state.ProjectCyberBugsReducer.arrProject,\n        arrTaskType:state.TaskTypeReducer.arrTaskType,\n        arrPriority:state.PriorityReducer.arrPriority,\n        arrStatus:state.StatusReducer.arrStatus,\n    }\n}\n\n\nexport default connect(mapStateToProps) (frmCreateTask);\n","export const GET_ALL_PROJECT = 'GET_ALL_PROJECT';\nexport const GET_ALL_PROJECT_SAGA = 'GET_ALL_PROJECT_SAGA';\n","export const GET_USER_BY_PROJECT_ID_SAGA = \"GET_USER_BY_PROJECT_ID_SAGA\";\nexport const GET_USER_BY_PROJECT_ID = \"GET_USER_BY_PROJECT_ID\";\n\nexport const GET_USER_MANAGEMENT = \"GET_USER_MANAGEMENT\";\n","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n    BarsOutlined,\n    SearchOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\n\nimport {useDispatch,useSelector} from 'react-redux'\nimport FormCreateTask from '../Forms/FormCreateTask/FormCreateTask';\n\nconst { Header, Sider, Content } = Layout;\nexport default function SidebarCyberbugs() {\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        collapsed: false,\n    })\n    const toggle = () => {\n        setState({\n            collapsed: !state.collapsed,\n        });\n    };\n    return (\n        <div>\n\n            <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '100%' }}>\n                <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\n\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />} onClick={()=>{\n                        dispatch({\n                            type:'OPEN_FORM_CREATE_TASK',\n                            Component:<FormCreateTask />,\n                            title:'Create task'\n                        })\n\n                    }}>\n                        <span className=\"mb-2\">Create task</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\n                        Search\n                     </Menu.Item>\n\n                </Menu>\n            </Sider>\n        </div>\n\n\n    )\n}\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport ContentMain from '../../components/Cyberbugs/Main/ContentMain';\nimport HeaderMain from '../../components/Cyberbugs/Main/HeaderMain';\nimport InfoMain from '../../components/Cyberbugs/Main/InfoMain';\nimport MenuCyberbugs from '../../components/Cyberbugs/MenuCyberbugs';\nimport ModalCyberBugs from '../../components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs';\nimport SidebarCyberbugs from '../../components/Cyberbugs/SidebarCyberbugs';\nimport Header from '../../components/Home/Header/Header';\n\nimport '../../index.css';\n\n\n\nexport const CyberbugsTemplate = (props) => {\n\n    const { Component, ...restParam } = props;\n    return <Route {...restParam} render={(propsRoute) => {\n        return <>\n            <div className=\"jira\">\n                <SidebarCyberbugs />\n                <MenuCyberbugs />\n                    <Component {...propsRoute} />\n                <ModalCyberBugs />\n            </div>\n        </>\n    }} />\n\n}","import React, { useEffect } from 'react'\nimport ContentMain from '../../../components/Cyberbugs/Main/ContentMain'\nimport HeaderMain from '../../../components/Cyberbugs/Main/HeaderMain'\nimport InfoMain from '../../../components/Cyberbugs/Main/InfoMain'\nimport {useSelector,useDispatch} from 'react-redux'\n\n\n\nexport default function IndexCyberBugs(props) {\n\n    const {projectDetail} = useSelector(state => state.ProjectReducer)\n    const dispatch = useDispatch();\n\n    console.log('projectDetail',projectDetail)\n\n\n    useEffect(()=>{\n        //Khi người dùng link qua trang này bằng thẻ navlink hoặc người dùng tự gõ url thì ta sẽ lấy tham số từ url => gọi saga\n        const {projectId} = props.match.params;\n        dispatch({\n            type:'GET_PROJECT_DETAIL',\n            projectId\n        });\n    },[])\n\n\n    return (\n        <div className=\"main\">\n            <HeaderMain projectDetail={projectDetail} />\n\n            <InfoMain projectDetail={projectDetail} />\n\n            <ContentMain projectDetail={projectDetail} />\n        </div>\n\n    )\n}\n","import React, { useEffect } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup'\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nfunction CreateProject(props) {\n\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\n    const dispatch = useDispatch();\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    useEffect(() => {\n        //Gọi api để lấy dữ liệu thẻ select\n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\n    }, []);\n    const handleEditorChange = (content, editor) => {\n        setFieldValue('description', content)\n    }\n\n\n    return (\n        <div className=\"container m-5\">\n            <h3>CreateProject</h3>\n            <form className=\"container\" onSubmit={handleSubmit} onChange={handleChange}>\n                <div className=\"form-group\">\n                    <p>Name</p>\n                    <input className=\"form-control\" name=\"projectName\" />\n                </div>\n                <div className=\"form-group\">\n                    <p>Description</p>\n                    <Editor\n\n                        name=\"description\"\n\n                        init={{\n                            selector: 'textarea#myTextArea',\n\n                            height: 500,\n                            menubar: false,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | \\\n                                alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={handleEditorChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <select name=\"categoryId\" className=\"form-control\" onChange={handleChange}>\n                        {arrProjectCategory.map((item, index) => {\n                            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\n                        })}\n                    </select>\n                </div>\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Create project</button>\n            </form>\n        </div>\n    )\n}\n\n\n\n\nconst createProjectForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        console.log('propvalue', props)\n        return {\n            projectName: '',\n            description: '',\n            categoryId: props.arrProjectCategory[0]?.id\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n\n        props.dispatch({ \n            type: 'CREATE_PROJECT_SAGA',\n            newProject: values \n        })\n\n\n    },\n    displayName: 'CreateProjectFormik',\n})(CreateProject);\n\nconst mapStateToProps = (state) => ({\n\n    arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\n\n})\n\n\nexport default connect(mapStateToProps)(createProjectForm);","import { Editor } from '@tinymce/tinymce-react'\nimport { withFormik } from 'formik';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\n\n\nfunction FormEditProject(props) {\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\n    const dispatch = useDispatch();\n\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n\n\n\n    // const submitForm = (e) => {\n    //     e.preventDefault();\n    //     alert('submit edit');\n    // }\n\n    //componentdidmount\n    useEffect(() => {\n\n        //Gọi api load project category \n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\n\n\n        //Load sự kiện submit lên drawer nút submit\n        dispatch({ type: 'SET_SUBMIT_EDIT_PROJECT', submitFunction: handleSubmit });\n        \n\n\n\n    }, [])\n\n\n    const handleEditorChange = (content, editor) => {\n        setFieldValue('description', content)\n    }\n\n    return (\n        <form className=\"container-fuild\" onSubmit={handleSubmit}>\n            <div className=\"row\">\n                <div className=\"col-4\">\n\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project id</p>\n                        <input value={values.id} disabled className=\"form-control\" name=\"id\" />\n                    </div>\n\n\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project name</p>\n                        <input value={values.projectName} className=\"form-control\" name=\"projectName\" onChange={handleChange} />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project Category</p>\n                        <select className=\"form-control\" name=\"categoryId\" value={values.categoryId}>\n                            {arrProjectCategory?.map((item, index) => {\n                                return <option key={index} value={item.id}>\n                                    {item.projectCategoryName}\n                                </option>\n                            })}\n                        </select>\n\n\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Description</p>\n                        <Editor\n\n                            name=\"description123\"\n                            initialValue={values.description}\n                            value = {values.description}\n                            init={{\n                                selector: 'textarea#myTextArea',\n                                height: 500,\n                            \n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    'undo redo | formatselect | bold italic backcolor | \\\n        alignleft aligncenter alignright alignjustify | \\\n        bullist numlist outdent indent | removeformat | help'\n                            }}\n                            onEditorChange={handleEditorChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </form >\n    )\n}\n\n\n\n\n\nconst EditProjectForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        const { projectEdit } = props;\n\n        return {\n            id: projectEdit?.id,\n            projectName: projectEdit.projectName,\n            description: projectEdit.description,\n            categoryId: projectEdit.categoryId\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n\n        //Khi người dùng bấm submit => đưa dữ liệu về backedn thông qua api\n        // const action = {\n        //     type:'UPDATE_PROJECT_SAGA',\n        //     prjectUpdate:values\n        // }\n        //Gọi saga\n        props.dispatch({\n            type:'UPDATE_PROJECT_SAGA',\n            prjectUpdate:values\n        })\n\n    },\n    displayName: 'EditProjectForm',\n})(FormEditProject);\n\nconst mapStateToProps = (state) => ({\n\n    projectEdit: state.ProjectReducer.projectEdit\n\n})\n\n\n\nexport default connect(mapStateToProps)(EditProjectForm);","import React, { useState, useEffect, useRef } from 'react'\nimport { Table, Tag, Space, Button, Avatar, Popconfirm, message, Popover, AutoComplete } from 'antd';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { FormOutlined, DeleteOutlined,CloseSquareOutlined } from '@ant-design/icons'\nimport { useSelector, useDispatch } from 'react-redux'\nimport FormEditProject from '../../../components/Forms/FormEditProject.js/FormEditProject';\nimport { NavLink } from 'react-router-dom';\n\n\n\nexport default function ProjectManagement(props) {\n    //Lấy dữ liệu từ reducer về component\n    const projectList = useSelector(state => state.ProjectCyberBugsReducer.projectList);\n\n    const { userSearch } = useSelector(state => state.UserLoginCyberBugsReducer);\n\n    const [value, setValue] = useState('');\n\n    const searchRef = useRef(null);\n\n    //Sử dụng useDispatch để gọi action\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        filteredInfo: null,\n        sortedInfo: null,\n    });\n\n    useEffect(() => {\n        dispatch({ type: 'GET_LIST_PROJECT_SAGA' })\n    }, [])\n\n    const handleChange = (pagination, filters, sorter) => {\n        console.log('Various parameters', pagination, filters, sorter);\n        setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    };\n\n    const clearFilters = () => {\n        setState({ filteredInfo: null });\n    };\n\n    const clearAll = () => {\n        setState({\n            filteredInfo: null,\n            sortedInfo: null,\n        });\n    };\n\n    const setAgeSort = () => {\n        setState({\n            sortedInfo: {\n                order: 'descend',\n                columnKey: 'age',\n            },\n        });\n    };\n\n    let { sortedInfo, filteredInfo } = state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n        {\n            title: 'id',\n            dataIndex: 'id',\n            key: 'id',\n            sorter: (item2, item1) => {\n                return item2.id - item1.id;\n            },\n            sortDirections: ['descend'],\n\n        },\n        {\n            title: 'projectName',\n            dataIndex: 'projectName',\n            key: 'projectName',\n            render: (text,record,index) => {\n                return <NavLink to={`/projectdetail/${record.id}`}> {text}</NavLink>\n            },\n            sorter: (item2, item1) => {\n                let projectName1 = item1.projectName?.trim().toLowerCase();\n                let projectName2 = item2.projectName?.trim().toLowerCase();\n                if (projectName2 < projectName1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n\n        },\n        // {\n        //     title: 'description',\n        //     dataIndex: 'description',\n        //     key: 'description',\n        //     render: (text, record, index) => {\n        //         let contentJSX = ReactHtmlParser(text);\n\n        //         return <div>\n        //             {contentJSX}\n        //         </div>\n        //     }\n        // },\n\n        {\n            title: 'category',\n            dataIndex: 'categoryName',\n            key: 'categoryName',\n            sorter: (item2, item1) => {\n                let categoryName1 = item1.categoryName?.trim().toLowerCase();\n                let categoryName2 = item2.categoryName?.trim().toLowerCase();\n                if (categoryName2 < categoryName1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n        },\n        {\n            title: 'creator',\n            // dataIndex: 'creator',\n            key: 'creator',\n            render: (text, record, index) => {\n                return <Tag color=\"green\">{record.creator?.name}</Tag>\n            },\n            sorter: (item2, item1) => {\n                let creator1 = item1.creator?.name.trim().toLowerCase();\n                let creator2 = item2.creator?.name.trim().toLowerCase();\n                if (creator2 < creator1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n        },\n        {\n            title: 'members',\n            key: 'members',\n            render: (text, record, index) => {\n                return <div>\n                    {record.members?.slice(0, 3).map((member, index) => {\n                        return (\n                            <Popover key={index} placement=\"top\" title=\"members\" content={() => {\n                                return <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>avatar</th>\n                                            <th>name</th>\n                                            <th></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {record.members?.map((item, index) => {\n                                            return <tr key={index}>\n                                                <td>{item.userId}</td>\n                                                <td><img src={item.avatar} width=\"30\" height=\"30\" style={{borderRadius:'15px'}} /></td>\n                                                <td>{item.name}</td>\n                                                <td>\n                                                    <button onClick={()=>{\n                                                        dispatch({\n                                                            type:'REMOVE_USER_PROJECT_API',\n                                                            userProject: {\n                                                                userId:item.userId,\n                                                                projectId: record.id\n                                                            }\n                                                        })\n\n                                                    }} className=\"btn btn-danger\" style={{borderRadius:'50%'}}>X</button>\n                                                </td>\n                                            </tr>\n                                        })}\n                                    </tbody>\n                                </table>\n                            }}>\n                                <Avatar key={index} src={member.avatar} />\n                            </Popover>\n                        )\n                    })}\n\n                    {record.members?.length > 3 ? <Avatar>...</Avatar> : ''}\n\n                    <Popover placement=\"rightTop\" title={\"Add user\"} content={() => {\n                        return <AutoComplete\n\n                            options={userSearch?.map((user, index) => {\n                                return { label: user.name, value: user.userId.toString() }\n                            })}\n\n                            value={value}\n\n                            onChange={(text) => {\n                                setValue(text);\n                            }}\n\n                            onSelect={(valueSelect, option) => {\n                                //set giá trị của hộp thọa = option.label\n                                setValue(option.label);\n                                //Gọi api gửi về backend\n                                dispatch({\n                                    type: 'ADD_USER_PROJECT_API',\n                                    userProject: {\n                                        \"projectId\": record.id,\n                                        \"userId\": valueSelect\n                                    }\n                                })\n\n\n                            }}\n                            style={{ width: '100%' }} onSearch={(value) => {\n                                    \n                                if(searchRef.current) {\n                                    clearTimeout(searchRef.current);\n                                }\n                                searchRef.current = setTimeout(()=>{\n                                    dispatch({\n                                        type: 'GET_USER_API',\n                                        keyWord: value\n                                    })\n    \n                                },300)\n                               \n                            }} />\n                    }} trigger=\"click\">\n                        <Button style={{ borderRadius: '50%' }}>+</Button>\n                    </Popover>\n                </div>\n            }\n\n        },\n\n        {\n            title: 'Action',\n            dataIndex: '',\n            key: 'x',\n            render: (text, record, index) => {\n                return <div>\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\n                        const action = {\n                            type: 'OPEN_FORM_EDIT_PROJECT',\n                            title:'Edit Project',\n                            Component: <FormEditProject />,\n                        }\n\n                        //dispatch lên reducer nội dung drawer\n                        dispatch(action);\n                        //dispatch dữ liệu dòng hiện tai lên reducer\n                        const actionEditProject = {\n                            type: 'EDIT_PROJECT',\n                            projectEditModel: record\n                        }\n                        dispatch(actionEditProject);\n                    }}>\n                        <FormOutlined style={{ fontSize: 17 }} />\n                    </button>\n                    <Popconfirm\n                        title=\"Are you sure to delete this project?\"\n                        onConfirm={() => {\n                            dispatch({ type: 'DELETE_PROJECT_SAGA', idProject: record.id })\n                        }}\n\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <button className=\"btn btn-danger\">\n                            <DeleteOutlined style={{ fontSize: 17 }} />\n                        </button>\n                    </Popconfirm>\n\n                </div>\n            },\n        }\n    ];\n    return (\n        <div className=\"container-fluid m-5\">\n            <h3>Project management</h3>\n            <Space style={{ marginBottom: 16 }}>\n                <Button onClick={setAgeSort}>Sort age</Button>\n                <Button onClick={clearFilters}>Clear filters</Button>\n                <Button onClick={clearAll}>Clear filters and sorters</Button>\n            </Space>\n            <Table columns={columns} rowKey={\"id\"} dataSource={projectList} onChange={handleChange} />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nexport default function DrawerCyberBugs(props) {\n\n\n\n    const { visible, ComponentContentDrawer,callBackSubmit,title } = useSelector(state => state.drawerReducer);\n\n    const dispatch = useDispatch();\n\n    console.log('visible', visible)\n\n\n    const showDrawer = () => {\n        dispatch({ type: 'OPEN_DRAWER' });\n    };\n\n    const onClose = () => {\n        dispatch({ type: 'CLOSE_DRAWER' });\n\n    };\n    return (\n        <>\n            {/* <button onClick={showDrawer}>showdrawer</button> */}\n            <Drawer\n                title={title}\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button onClick={callBackSubmit} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                }\n            >\n                {/* Nội dung thay đổi của drawer */}\n                {ComponentContentDrawer}\n     \n            </Drawer>\n        </>\n    )\n}\n","import React, { useRef, useState } from 'react';\n\nimport { useSpring, animated } from 'react-spring'\n\nimport './DemoDragDrop.css'\n\n\nconst defaultValue = [\n    { id: 1, taskName: 'Task 1' },\n    { id: 2, taskName: 'Task 2' },\n    { id: 3, taskName: 'Task 3' },\n    { id: 4, taskName: 'Task 4' },\n    { id: 5, taskName: 'Task 5' },\n];\n\n\nexport default function DemoDragDrop(props) {\n\n    const [taskList, setTaskList] = useState(defaultValue);\n    const tagDrag = useRef({})\n    const tagDragEnter = useRef({});\n    //Animation\n    const [propsSpring, set, stop] = useSpring(() => ({ from: { bottom: -25 }, to: { bottom: 0 },config:{duration:250},reset:true }));\n\n\n\n    const handleDragStart = (e, task, index) => {\n        console.log(e.target);\n        console.log('dragEnd');\n        //Lưu lại giá trị của task đang drag\n        tagDrag.current = task;\n    }\n\n\n    const handleDragEnter = (e, taskDragEnter, index) => {\n        // console.log('dragEnterTag',e.target)\n        // console.log('targertOver',task)\n        // console.log('index',index)\n        //Lưu lại giá trị của task được kéo ngang qua\n        set({bottom:0});\n        tagDragEnter.current = { ...taskDragEnter };\n\n        let taskListUpdate = [...taskList];\n        //Láy ra index thằng đang kéo\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\n        //Lấy ra index thằng bị kéo qua \n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\n\n        //Bién6 chứa giá trị thằng đang kéo\n        let temp = taskListUpdate[indexDragTag];\n        //Lấy giá trị tại vi trí đang kéo gán = thằng kéo qua\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\n        //Lấy thằng kéo qua gán = đang keo\n        taskListUpdate[indexDragEnter] = temp;\n\n\n\n        setTaskList(taskListUpdate);\n\n\n    }\n\n    const handleDragEnd = (e) => {\n       \n    }\n    const handleDrop = (e) => {\n        // console.log('drop', e.target);\n    }\n    return (\n        <div className=\"container\" onDragOver={(e)=> {\n            e.stopPropagation();\n             e.preventDefault();\n\n         }}  onDrop={(e)=> {\n\n            tagDrag.current = {};\n            console.log('dragEnd')\n            setTaskList([...taskList])\n\n         }}>\n            <div className=\"text-center display-4\">Task list</div>\n            <div className=\"row\">\n                <div className=\"col-2\"></div>\n                <div className=\"bg-dark p-5 col-4\">\n                    {taskList.map((task, index) => {\n\n                        let cssDragTag = task.id === tagDrag.current.id ? 'dragTag' : '';\n\n                        if (task.id === tagDragEnter.current.id) {\n                            return <animated.div\n                                style={{\n                                    position:'relative',\n                                    bottom: propsSpring.bottom.interpolate(numBottom => `${numBottom}px`)\n                                }}\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\n                                onDragEnd={(e) => { handleDragEnd(e) }}\n                                draggable=\"true\"\n                                key={index}\n                                className={`bg-success text-white m-1 p-3`}\n                            >\n\n\n                                {task.taskName}\n\n\n                            </animated.div>\n                        }\n\n                        return <div\n                            onDragStart={(e) => { handleDragStart(e, task, index) }}\n                            onDragEnter={(e) => { handleDragEnter(e, task, index) }}\n                            onDragEnd={(e) => { handleDragEnd(e) }}\n                            draggable=\"true\"\n                            key={index}\n                            className={`bg-success text-white m-1 p-3 ${cssDragTag}`}>\n                            {task.taskName}\n                        </div>\n                    })}\n                </div>\n                <div className=\"col-2 bg-primary\" style={{ height: 500 }} ></div>\n\n            </div>\n\n        </div>\n    )\n}\n\n// onDragOver={(e)=>{\n//     e.stopPropagation();\n//     e.preventDefault();\n// }}","import React, { useRef, useState } from 'react';\nimport './Demo.css';\nimport { useSpring, useSprings, animated } from 'react-spring'\n\nconst defaultValue = [\n    { id: 1, taskName: 'Task 1' },\n    { id: 2, taskName: 'Task 2' },\n    { id: 3, taskName: 'Task 3' },\n    { id: 4, taskName: 'Task 4' },\n    { id: 5, taskName: 'Task 5' },\n]\n\n\nexport default function Demo(props) {\n\n    const [taskList, setTaskList] = useState(defaultValue);\n    const tagDrag = useRef({});\n    const tagDragEnter = useRef({});\n    const [propsSpring, set, stop] = useSpring(() => ({ to: { rotate: 25, bottom: 0 }, from: { rotate: 0, bottom: -50 }, config: { duration: 250 }, reset: true }))\n\n    const handleDragStart = (e, task, index) => {\n        console.log(e.target);\n        console.log(task);\n        //Lưu lại giá trị của task đang drag\n        tagDrag.current = task;\n    }\n\n\n    const handleDragEnter = (e, taskDragEnter, index) => {\n        // console.log('dragEnterTag',e.target)\n        // console.log('targertOver',task)\n        // console.log('index',index)\n        set({ bottom: 0 })\n       \n\n        let taskListUpdate = [...taskList];\n        //Láy ra index thằng đang kéo\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\n        //Lấy ra index thằng bị kéo qua \n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\n\n        //Bién6 chứa giá trị thằng đang kéo\n        let temp = taskListUpdate[indexDragTag];\n        //Lấy giá trị tại vi trí đang kéo gán = thằng kéo qua\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\n        //Lấy thằng kéo qua gán = đang keo\n        taskListUpdate[indexDragEnter] = temp;\n\n        tagDragEnter.current = taskDragEnter;\n\n        setTaskList(taskListUpdate);\n\n\n\n    }\n\n    const handleDragEnd = (e) => {\n\n\n    }\n    const handleDrop = (e) => {\n        // console.log('drop', e.target);\n    }\n    return (\n        <div className=\"container\" onDragOver={(e) => {\n            e.stopPropagation();\n            e.preventDefault();\n        }}\n            onDrop={(e) => {\n                tagDrag.current = {}\n                setTaskList([...taskList])\n            }}\n        >\n            <div className=\"text-center display-4\">Task list</div>\n            <div className=\"row\">\n                <div className=\"col-2\"></div>\n                <div className=\"bg-dark p-5 col-4\">\n                    {taskList.map((task, index) => {\n\n                        let cssDrag = task.id === tagDrag.current.id ? 'tagDrag' : ''\n                        let cssDragEnter = tagDragEnter.current.id == task.id ? 'tagDragEnter' : '';\n                        if (cssDragEnter !== '') {\n                            return <animated.div\n                                style={{\n                                    transform: propsSpring.bottom.interpolate(r => `${r}px`),\n                                    position: 'relative',\n                                    bottom: propsSpring.bottom.interpolate(r => `${r}px`),\n\n\n                                }}\n\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\n                                draggable=\"true\"\n                                onDragEnd={(e) => { handleDragEnd(e) }}\n                                onDragLeave={(e) => { handleDragEnd(e) }}\n                                key={index}\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\n                                {task.taskName}\n                            </animated.div>\n                        } else {\n                            return <div\n\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\n                                draggable=\"true\"\n                                onDragEnd={(e) => { handleDragEnd(e) }}\n                                onDragLeave={(e) => { handleDragEnd(e) }}\n\n                                key={index}\n                                className={`bg-success text-white m-1 p-3 ${cssDrag} ${cssDragEnter}`}>\n                                {task.taskName}\n                            </div>\n                        }\n                    })}\n                </div>\n                <div className=\"col-2 bg-primary\" style={{ height: 500 }} ></div>\n\n            </div>\n\n        </div>\n    )\n}\n\n// onDragOver={(e)=>{\n//     e.stopPropagation();\n//     e.preventDefault();\n// }}","import React, { useState } from 'react'\nimport _ from 'lodash'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\n\n\n\n\n\n\n\nexport default function DragAndDropDnD(props) {\n\n    const [state, setState] = useState({\n        toDo: {\n            id: 'toDo',\n            items: [\n                { id: '1', taskName: 'Task 1' },\n                { id: '2', taskName: 'Task 2' },\n                { id: '3', taskName: 'Task 3' },\n            ]\n        },\n        inProgress: {\n            id: 'inProgress',\n            items: [\n                { id: '4', taskName: 'Task 4' },\n                { id: '5', taskName: 'Task 5' },\n                { id: '6', taskName: 'Task 6' },\n            ]\n        },\n        done: {\n            id: 'done',\n            items: [\n                { id: '7', taskName: 'Task 7' },\n                { id: '8', taskName: 'Task 8' },\n                { id: '9', taskName: 'Task 9' },\n            ]\n        }\n    })\n\n    const handleDragEnd = (result) => { \n        let {destination,source} = result;\n\n        if(!destination){\n            return ;\n        }\n\n        if(destination.index === source.index && destination.droppableId === source.droppableId){\n            return;\n        }\n\n        //tạo ra 1 tag drag\n        let itemCopy = {...state[source.droppableId].items[source.index]};\n        console.log('itemCopy',itemCopy)\n\n        //Droppable bắt đầu kéo\n        let index = state[source.droppableId].items.findIndex(item => item.id == itemCopy.id);\n        \n        state[source.droppableId].items.splice(index,1);\n\n        //Droppable thả vào\n        let dropDestination = state[destination.droppableId].items;\n\n        dropDestination.splice(destination.index, 0, itemCopy)\n\n\n        setState(state);\n        \n\n        \n    }\n\n    return (\n        <div className=\"container\">\n            <h3 className=\"text-center display-4\">Demo DraggAndDropp DND</h3>\n\n            <DragDropContext onDragEnd={handleDragEnd}>\n\n                <div className=\"row\">\n                    {_.map(state, (statusTask, index) => {\n                        return <Droppable droppableId={statusTask.id} key={index}>\n                            {(provided) => {\n                                return <div className=\"col-4\" >\n\n                                    <div className=\"bg-dark p-5\"\n                                        key={index}\n                                        ref={provided.innerRef}\n                                        {...provided.droppableProps}\n                                    >\n                                        <h3 className=\"text-white\">{statusTask.id}</h3>\n                                        {statusTask.items.map((item, index) => {\n                                            return <Draggable key={item.id} index={index} draggableId={item.id}>\n                                                {(provided) => {\n                                                    return <div\n                                                        ref={provided.innerRef}\n                                                        {...provided.draggableProps}\n                                                        {...provided.dragHandleProps}\n                                                        className=\"mt-2 p-2 bg-white text-center\">\n                                                        {item.taskName}\n                                                    </div>\n                                                }}\n                                            </Draggable>\n\n\n                                        })}\n\n\n                                        {provided.placeholder}\n\n                                    </div>\n                                </div>\n                            }}\n\n                        </Droppable>\n                    })}\n\n                </div>\n            </DragDropContext>\n\n        </div>\n    )\n}\n","import React from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  FacebookOutlined,\r\n  TwitterOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { withFormik, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from \"react-redux\";\r\nimport { USER_SIGNIN_API } from \"../../../redux/constants/Cyberbugs/Cyberbugs\";\r\nimport {\r\n  singinCyberbugAction,\r\n  singupCyberbugAction,\r\n} from \"../../../redux/actions/CyberBugsActions\";\r\nfunction LoginCyberBugs(props) {\r\n  const { values, touched, errors, handleChange, handleBlur, handleSubmit } =\r\n    props;\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"container\"\r\n      style={{ height: window.innerHeight }}\r\n    >\r\n      <div\r\n        className=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: window.innerHeight }}\r\n      >\r\n        <h3 className=\"text-center\" style={{ fontWeight: 300, fontSize: 35 }}>\r\n          Signin cyberbugs\r\n        </h3>\r\n        <div className=\"d-flex mt-3\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            name=\"email\"\r\n            size=\"large\"\r\n            placeholder=\"email\"\r\n            prefix={<UserOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.email}</div>\r\n        <div className=\"d-flex mt-3\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            size=\"large\"\r\n            placeholder=\"password\"\r\n            prefix={<LockOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.password}</div>\r\n        <div className=\"d-flex mt-3\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            name=\"name\"\r\n            size=\"large\"\r\n            placeholder=\"name\"\r\n            prefix={<LockOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.name}</div>\r\n        <div className=\"d-flex mt-3\">\r\n          <Input\r\n            onChange={handleChange}\r\n            style={{ width: \"100%\", minWidth: 300 }}\r\n            name=\"phoneNumber\"\r\n            size=\"large\"\r\n            placeholder=\"phoneNumber\"\r\n            prefix={<LockOutlined />}\r\n          />\r\n        </div>\r\n        <div className=\"text-danger\">{errors.phoneNumber}</div>\r\n\r\n        <Button\r\n          htmlType=\"submit\"\r\n          size=\"large\"\r\n          style={{\r\n            minWidth: 300,\r\n            backgroundColor: \"rgb(102,117,223)\",\r\n            color: \"#fff\",\r\n          }}\r\n          className=\"mt-5\"\r\n        >\r\n          Login\r\n        </Button>\r\n\r\n        <div className=\"social mt-3 d-flex\">\r\n          <Button\r\n            style={{ backgroundColor: \"rgb(59,89,152)\" }}\r\n            shape=\"circle\"\r\n            size={\"large\"}\r\n          >\r\n            <span className=\"font-weight-bold\" style={{ color: \"#fff\" }}>\r\n              F\r\n            </span>\r\n          </Button>\r\n          <Button\r\n            type=\"primary ml-3\"\r\n            shape=\"circle\"\r\n            icon={<TwitterOutlined />}\r\n            size={\"large\"}\r\n          ></Button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst LoginCyberBugsWithFormik = withFormik({\r\n  mapPropsToValues: () => ({\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    phoneNumber: \"\",\r\n  }),\r\n  validationSchema: Yup.object().shape({\r\n    email: Yup.string()\r\n      .required(\"Email is required!\")\r\n      .email(\"email is invalid!\"),\r\n    password: Yup.string()\r\n      .min(6, \"password must have min 6 characters\")\r\n      .max(32, \"password  have max 32 characters\"),\r\n    name: Yup.string()\r\n      .required(\"Email is required!\")\r\n      .max(32, \"password  have max 32 characters\"),\r\n    phoneNumber: Yup.string()\r\n      .min(10, \"password must have min 10 characters\")\r\n      .max(10, \"password  have max 10 characters\"),\r\n  }),\r\n  handleSubmit: (\r\n    { email, password, name, phoneNumber },\r\n    { props, setSubmitting }\r\n  ) => {\r\n    // let action = {\r\n    //     type:USER_SIGNIN_API,\r\n    //     userLogin: {\r\n    //         email:values.email,\r\n    //         password:values.password\r\n    //     }\r\n    // }\r\n\r\n    setSubmitting(true);\r\n    props.dispatch(singupCyberbugAction(email, password, name, phoneNumber));\r\n\r\n    // console.log(props)\r\n    // console.log(values);\r\n  },\r\n  displayName: \"LoginCyberBugs\",\r\n})(LoginCyberBugs);\r\n\r\nexport default connect()(LoginCyberBugsWithFormik);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Avatar,\r\n  Popconfirm,\r\n  message,\r\n  Popover,\r\n  AutoComplete,\r\n} from \"antd\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport {\r\n  FormOutlined,\r\n  DeleteOutlined,\r\n  CloseSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FormEditProject from \"../../../components/Forms/FormEditProject.js/FormEditProject\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function UserManagement(props) {\r\n  //Lấy dữ liệu từ reducer về component\r\n  const userList = useSelector((state) => state.UserManagementReducer.userList);\r\n\r\n  // const { userSearch } = useSelector(\r\n  //   (state) => state.UserLoginCyberBugsReducer\r\n  // );\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const searchRef = useRef(null);\r\n\r\n  //Sử dụng useDispatch để gọi action\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"GET_LIST_MANAGEMENT_USER_SAGA\" });\r\n  }, []);\r\n\r\n  const handleChange = (pagination, filters, sorter) => {\r\n    console.log(\"Various parameters\", pagination, filters, sorter);\r\n    setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setState({ filteredInfo: null });\r\n  };\r\n\r\n  const clearAll = () => {\r\n    setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n\r\n  const setAgeSort = () => {\r\n    setState({\r\n      sortedInfo: {\r\n        order: \"descend\",\r\n        columnKey: \"age\",\r\n      },\r\n    });\r\n  };\r\n\r\n  let { sortedInfo, filteredInfo } = state;\r\n  sortedInfo = sortedInfo || {};\r\n  filteredInfo = filteredInfo || {};\r\n  const columns = [\r\n    {\r\n      title: \"STT\",\r\n      dataIndex: \"userId\",\r\n      key: \"userId\",\r\n      sorter: (item2, item1) => {\r\n        return item2.userId - item1.userId;\r\n      },\r\n      sortDirections: [\"descend\"],\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      key: \"email\",\r\n      // render: (text, record, index) => {\r\n      //   return <NavLink to={`/projectdetail/${record.id}`}> {text}</NavLink>;\r\n      // },\r\n      // sorter: (item2, item1) => {\r\n      //   let projectName1 = item1.projectName?.trim().toLowerCase();\r\n      //   let projectName2 = item2.projectName?.trim().toLowerCase();\r\n      //   if (projectName2 < projectName1) {\r\n      //     return -1;\r\n      //   }\r\n      //   return 1;\r\n      // },\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      // render: (text, record, index) => {\r\n      //   return <NavLink to={`/projectdetail/${record.id}`}> {text}</NavLink>;\r\n      // },\r\n      // sorter: (item2, item1) => {\r\n      //   let projectName1 = item1.projectName?.trim().toLowerCase();\r\n      //   let projectName2 = item2.projectName?.trim().toLowerCase();\r\n      //   if (projectName2 < projectName1) {\r\n      //     return -1;\r\n      //   }\r\n      //   return 1;\r\n      // },\r\n    },\r\n    // {\r\n    //     title: 'description',\r\n    //     dataIndex: 'description',\r\n    //     key: 'description',\r\n    //     render: (text, record, index) => {\r\n    //         let contentJSX = ReactHtmlParser(text);\r\n\r\n    //         return <div>\r\n    //             {contentJSX}\r\n    //         </div>\r\n    //     }\r\n    // },\r\n\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phoneNumber\",\r\n      key: \"phoneNumber\",\r\n      // sorter: (item2, item1) => {\r\n      //   let categoryName1 = item1.categoryName?.trim().toLowerCase();\r\n      //   let categoryName2 = item2.categoryName?.trim().toLowerCase();\r\n      //   if (categoryName2 < categoryName1) {\r\n      //     return -1;\r\n      //   }\r\n      //   return 1;\r\n      // },\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"\",\r\n      key: \"x\",\r\n      render: (text, record, index) => {\r\n        return (\r\n          <div>\r\n            <button\r\n              className=\"btn mr-2 btn-primary\"\r\n              onClick={() => {\r\n                const action = {\r\n                  type: \"OPEN_FORM_EDIT_PROJECT\",\r\n                  title: \"Edit Project\",\r\n                  Component: <FormEditProject />,\r\n                };\r\n\r\n                //dispatch lên reducer nội dung drawer\r\n                dispatch(action);\r\n                //dispatch dữ liệu dòng hiện tai lên reducer\r\n                const actionEditProject = {\r\n                  type: \"EDIT_PROJECT\",\r\n                  projectEditModel: record,\r\n                };\r\n                dispatch(actionEditProject);\r\n              }}\r\n            >\r\n              <FormOutlined style={{ fontSize: 17 }} />\r\n            </button>\r\n            <Popconfirm\r\n              title=\"Are you sure to delete this project?\"\r\n              onConfirm={() => {\r\n                dispatch({ type: \"DELETE_PROJECT_SAGA\", idProject: record.id });\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <button className=\"btn btn-danger\">\r\n                <DeleteOutlined style={{ fontSize: 17 }} />\r\n              </button>\r\n            </Popconfirm>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"container-fluid m-5\">\r\n      <h3>Project management</h3>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={setAgeSort}>Sort age</Button>\r\n        <Button onClick={clearFilters}>Clear filters</Button>\r\n        <Button onClick={clearAll}>Clear filters and sorters</Button>\r\n      </Space>\r\n      <Table\r\n        columns={columns}\r\n        rowKey={\"id\"}\r\n        dataSource={userList}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter,\n  NavLink,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport LoadingComponent from \"./components/GlobalSetting/LoadingComponent/LoadingComponent\";\nimport Header from \"./components/Home/Header/Header\";\nimport Modal from \"./HOC/Modal/Modal\";\nimport About from \"./pages/About/About\";\nimport BaiTapToDoListSaga from \"./pages/BaiTapToDoListSaga/BaiTapToDoListSaga\";\nimport Contact from \"./pages/Contact/Contact\";\nimport LoginCyberBugs from \"./pages/CyberBugs/LoginCyberBugs/LoginCyberBugs\";\nimport DemoHOCModal from \"./pages/DemoHOCModal/DemoHOCModal\";\nimport Detail from \"./pages/Detail/Detail\";\nimport Home from \"./pages/Home/Home\";\nimport Login from \"./pages/Login/Login\";\nimport PageNotFound from \"./pages/PageNotFound/PageNotFound\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Todolist from \"./pages/Todolist/Todolist\";\nimport ToDoListRedux from \"./pages/Todolist/ToDoListRedux\";\nimport TodolistRFC from \"./pages/Todolist/TodolistRFC\";\nimport { HomeTemplate } from \"./templates/HomeTemplate/HomeTemplate\";\nimport { UserLoginTemplate } from \"./templates/HomeTemplate/UserLoginTemplate\";\nimport { useDispatch } from \"react-redux\";\nimport { CyberbugsTemplate } from \"./templates/HomeTemplate/CyberbugsTemplate\";\nimport indexCyberBugs from \"./pages/CyberBugs/ProjectDetail/indexCyberBugs\";\nimport CreateProject from \"./pages/CyberBugs/CreateProject/CreateProject\";\nimport ProjectManagement from \"./pages/CyberBugs/ProjectManagement/ProjectManagement\";\nimport DrawerCyberBugs from \"./HOC/CyberbugsHOC/DrawerCyberBugs\";\nimport NotificationComponent from \"./components/Notification/NotificationComponent\";\nimport DemoDragDrop from \"./pages/DemoDragDrop/DemoDragDrop\";\nimport Demo from \"./pages/Demo/Demo\";\nimport DragAndDropDnD from \"./pages/DragAndDropDnD/DragAndDropDnD\";\nimport SigninCyberBugs from \"./pages/CyberBugs/SigninCyberBugs/SigninCyberBugs\";\nimport UserManagement from \"./pages/CyberBugs/UserManagement/UserManagement\";\n\nfunction App() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: \"ADD_HISTORY\", history: history });\n  }, []);\n\n  return (\n    <div>\n      {/* <Modal /> */}\n      <LoadingComponent />\n      <DrawerCyberBugs />\n      <Switch>\n        {/* <Route exact path='/home'  render={(propsRoute)=>{\n          return <div>\n                <Header />\n                <Home {...propsRoute} />\n          </div>\n        }}/> */}\n\n        <CyberbugsTemplate path=\"/home\" exact Component={ProjectManagement} />\n        <CyberbugsTemplate\n          path=\"/usermanagement\"\n          exact\n          Component={UserManagement}\n        />\n        <HomeTemplate exact path=\"/contact\" Component={Contact} />\n        <HomeTemplate exact path=\"/about\" Component={About} />\n        <HomeTemplate exact path=\"/dragdrop\" Component={DemoDragDrop} />\n        <UserLoginTemplate exact path=\"/login\" Component={LoginCyberBugs} />\n        <HomeTemplate exact path=\"/detail/:id\" Component={Detail} />\n        <HomeTemplate exact path=\"/profile\" Component={Profile} />\n        <HomeTemplate exact path=\"/todolistrfc\" Component={TodolistRFC} />\n        <HomeTemplate exact path=\"/todolistrcc\" Component={Todolist} />\n        <HomeTemplate exact path=\"/todolistredux\" Component={ToDoListRedux} />\n        <HomeTemplate\n          exact\n          path=\"/todolistsaga\"\n          Component={BaiTapToDoListSaga}\n        />\n        <HomeTemplate exact path=\"/demohocmodal\" Component={DemoHOCModal} />\n        <HomeTemplate exact path=\"/demo\" Component={Demo} />\n        <HomeTemplate\n          exact\n          path=\"/demodragdropdnd\"\n          Component={DragAndDropDnD}\n        />\n        <CyberbugsTemplate exact path=\"/cyberbugs\" Component={indexCyberBugs} />\n        <CyberbugsTemplate\n          exact\n          path=\"/createproject\"\n          Component={CreateProject}\n        />\n        <CyberbugsTemplate\n          exact\n          path=\"/projectmanagement\"\n          Component={ProjectManagement}\n        />\n        <CyberbugsTemplate\n          exact\n          path=\"/projectdetail/:projectId\"\n          Component={indexCyberBugs}\n        />\n        <UserLoginTemplate exact path=\"/signup\" Component={SigninCyberBugs} />\n        <UserLoginTemplate exact path=\"/\" Component={LoginCyberBugs} />\n        <HomeTemplate path=\"*\" component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\"\n\n\nconst initialState = {\n    taskList:[]\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_TASK_API:\n        state.taskList = action.taskList;\n        return { ...state }\n\n    default:\n        return state\n    }\n}\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nconst initialState = {\n    isLoading:false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case DISPLAY_LOADING:\n        state.isLoading = true;\n        return { ...state }\n    case HIDE_LOADING:{\n        state.isLoading=false;\n        return {...state}\n    }\n    default:\n        return state\n    }\n}\n","import React from 'react'\n\nconst stateDefault = {\n    Component: <p>Nội dung mặc định</p>\n}\n\n\nexport const ModalReducer = (state = stateDefault,action) => {\n    switch(action.type) {\n        case 'OPEN_FORM' : {\n            state.Component = action.Component;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import Axios from \"axios\";\nimport { DOMAIN } from \"../util/constants/settingSystem\"\n\nexport class ToDoListService {\n    constructor(){\n\n    }\n\n    getTaskApi = () => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/GetAllTask`,\n            method: 'GET'\n        })\n    }\n\n    addTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/addTask`,\n            method: 'POST',\n            data: {\n                taskName:taskName\n            }\n        })\n    }\n\n    deleteTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE',\n        })\n    }\n\n    checkDoneTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n    rejectTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n}\n\nexport const toDoListService = new ToDoListService();\n\n","import Axios from 'axios'\nimport { call, delay, fork, take, takeEvery, takeLatest, put } from 'redux-saga/effects'\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, GET_TASK_API, REJECT_TASK_API } from '../constants/ToDoListConst';\nimport { toDoListService } from '../../services/ToDoListService'\nimport { STATUS_CODE } from '../../util/constants/settingSystem';\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../constants/LoadingConst';\n/*redux 2 loại action: \n    Loại 1: action => object (action thường)\n    Loại 2: action => function (thường dùng để xử lý api hoặc gọi các action khác )\n*/\n\n/*\n    01/01/2020 Khải viết chức năng getTask\n    Action saga lấy danh sách task từ api \n*/\nfunction* getTaskApiAction(action) {\n    //put giống dispatch action\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    try {\n        let { data, status } = yield call(toDoListService.getTaskApi)\n        yield delay(300);\n        if (status === STATUS_CODE.SUCCESS) {\n            //Sau khi lấy giá trị thành công dùng put (giống dispatch bên thunk) \n            yield put({\n                type: GET_TASK_API,\n                taskList: data\n            });\n        } else {\n            console.log('error')\n        }\n    }\n    catch (err) {\n        console.log('err')\n    }\n    yield put({\n        type: HIDE_LOADING\n    })\n\n}\n\nexport function* theoDoiActionGetTaskApi() {\n    yield takeLatest(GET_TASKLIST_API, getTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng addTask\n    Action saga nghiệp vụ thêm task\n*/\n\nfunction* addTaskApiAction(action) {\n    const { taskName } = action;\n    //Gọi api\n    try {\n        const { data, status } = yield call(() => { return toDoListService.addTaskApi(taskName) });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n    //Hiển thị loading\n    //thành công thì load lại task = cách gọi lại action saga load tasklist\n}\n\nexport function* theoDoiActionAddTaskApi() {\n    yield takeLatest(ADD_TASK_API, addTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga nghiệp vụ xóa task\n*/\n\nfunction* deleteTaskApi(action) {\n    console.log(action)\n    const { taskName } = action;\n    try {\n        //Gọi api deletetask\n        const { data, status } = yield call(() => {\n            return toDoListService.deleteTaskApi(taskName);\n        });\n\n        if (status === STATUS_CODE.SUCCESS) {\n            //Nếu thành công thì gọi lại action GET_TASKLIST_API(action saga thực thi)\n            yield put({\n                type: GET_TASKLIST_API,\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n\n\nexport function* theoDoiActionDeleteTask() {\n    yield takeLatest(DELETE_TASK_API, deleteTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ done task\n*/\n\nfunction* checkDoneTaskApi(action) {\n    const { taskName } = action;\n\n    try {\n        const { data, status } = yield call(() => {\n            return toDoListService.checkDoneTask(taskName);\n        });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\n\nexport function* theoDoiDoneTask() {\n    yield takeLatest(CHECK_TASK_API, checkDoneTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ reject task\n*/\nexport function* rejectTaskApi(action) {\n    const { taskName } = action;\n\n    try{\n        const {data,status} = yield call (()=>{\n            return toDoListService.rejectTask(taskName);\n        })\n        \n        if(status === STATUS_CODE.SUCCESS) {\n            yield put ({\n                type:GET_TASKLIST_API\n            })\n        }\n    }catch(err) {\n        console.log(err)\n    }\n\n\n}\n\n\nexport function* theoDoiRejectTask() {\n    yield takeLatest(REJECT_TASK_API, rejectTaskApi)\n}\n\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';","const { default: Axios } = require(\"axios\");\nconst { DOMAIN_CYBERBUG, TOKEN } = require(\"../util/constants/settingSystem\");\n\nexport const cyberbugsService = {\n  signinCyberBugs: (userLogin) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/users/signin`,\n      method: \"POST\",\n      data: userLogin,\n    });\n  },\n  signupCyberBugs: (userSignup) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Users/signup`,\n      method: \"POST\",\n      data: userSignup,\n    });\n  },\n\n  getAllProjectCategory: () => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/ProjectCategory`,\n      method: \"GET\",\n    });\n  },\n  createProject: (newProject) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/createProject`,\n      method: \"POST\",\n      data: newProject,\n    });\n  },\n  createProjectAuthorization: (newProject) => {\n    console.log(localStorage.getItem(TOKEN));\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/createProjectAuthorize`,\n      method: \"POST\",\n      data: newProject,\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) }, //JWT\n    });\n  },\n  getListProject: () => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/getAllProject`,\n      method: \"GET\",\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) }, //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n    });\n  },\n  updateProject: (projectUpdate) => {\n    return Axios({\n      url: `${DOMAIN_CYBERBUG}/Project/updateProject?projectId=${projectUpdate.id}`,\n      method: \"PUT\",\n      data: projectUpdate,\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(TOKEN) }, //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n    });\n  },\n};\n","import Axios from \"axios\"\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\"\n\nexport class baseService {\n    //put json về phía backend\n    put = (url,model) => {\n        return  Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'PUT',\n            data:model,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\n        }) \n    }\n\n    post = (url,model) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'POST',\n            data:model,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\n        }) \n    }\n\n\n    get = (url) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'GET',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n\n    delete = (url) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'DELETE',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n}","import { baseService } from \"./baseService\";\n\nexport class UserService extends baseService {\n  constructor() {\n    super();\n  }\n\n  getUser = (keyWord) => {\n    return this.get(`Users/getUser?keyword=${keyWord}`);\n  };\n\n  assignUserProject = (userProject) => {\n    return this.post(`Project/assignUserProject`, userProject);\n  };\n\n  getUserManagent = (keyWord) => {\n    return this.get(`Users/getUser`, keyWord);\n  };\n\n  deleteUserFromProject = (userProject) => {\n    return this.post(`Project/removeUserFromProject`, userProject);\n  };\n\n  getUserByProjectId = (idProject) => {\n    return this.get(`Users/getUserByProjectId?idProject=${idProject}`);\n  };\n}\n\nexport const userService = new UserService();\n","import Axios from \"axios\";\nimport {\n  call,\n  delay,\n  fork,\n  take,\n  takeEvery,\n  takeLatest,\n  put,\n  select,\n} from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport {\n  USER_SIGNIN_API,\n  USER_SIGNUP_API,\n  USLOGIN,\n} from \"../../constants/Cyberbugs/Cyberbugs\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport {\n  STATUS_CODE,\n  TOKEN,\n  USER_LOGIN,\n} from \"../../../util/constants/settingSystem\";\n\nimport { history } from \"../../../util/history\";\nimport { userService } from \"../../../services/UserService\";\nimport {\n  GET_USER_BY_PROJECT_ID,\n  GET_USER_BY_PROJECT_ID_SAGA,\n  GET_USER_MANAGEMENT,\n} from \"../../constants/Cyberbugs/UserConstatnts\";\nimport { array } from \"yup\";\n\n//Quản lý các action saga\nfunction* signinSaga(action) {\n  // console.log(action);\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(500);\n\n  //Gọi api\n  try {\n    const { data, status } = yield call(() =>\n      cyberbugsService.signinCyberBugs(action.userLogin)\n    );\n\n    //Lưu vào localstorage khi đăng nhập thành công\n    localStorage.setItem(TOKEN, data.content.accessToken);\n    localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\n\n    yield put({\n      type: USLOGIN,\n      userLogin: data.content,\n    });\n\n    // let history = yield select(state=> state.HistoryReducer.history)\n\n    history.push(\"/home\");\n  } catch (err) {\n    console.log(err.response.data);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiSignin() {\n  yield takeLatest(USER_SIGNIN_API, signinSaga);\n}\nfunction* signupSaga(action) {\n  // console.log(action);\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(500);\n\n  //Gọi api\n  try {\n    const { data, status } = yield call(() =>\n      cyberbugsService.signupCyberBugs(action.userSignup)\n    );\n\n    //Lưu vào localstorage khi đăng nhập thành công\n    if (STATUS_CODE.SUCCESS) {\n      alert(\"Đăng ký thành công\");\n    }\n\n    // let history = yield select(state=> state.HistoryReducer.history)\n\n    history.push(\"/login\");\n  } catch (err) {\n    console.log(err.response.data);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiSignup() {\n  yield takeLatest(USER_SIGNUP_API, signupSaga);\n}\n\n//Quản lý các action saga\nfunction* getUserSaga(action) {\n  //action.keyWord\n  console.log(\"keyword\", action.keyWord);\n  //Gọi api\n  try {\n    const { data, status } = yield call(() =>\n      userService.getUser(action.keyWord)\n    );\n\n    yield put({\n      type: \"GET_USER_SEARCH\",\n      lstUserSearch: data.content,\n    });\n    console.log(\"data\", data);\n  } catch (err) {\n    console.log(err.response.data);\n  }\n}\n\nexport function* theoDoiGetUser() {\n  yield takeLatest(\"GET_USER_API\", getUserSaga);\n}\n\nfunction* getUserManagementSaga(action) {\n  try {\n    const { data, status } = yield call(() => userService.getUserManagent());\n    console.log(data);\n    yield put({\n      type: GET_USER_MANAGEMENT,\n      userList: data.content,\n    });\n  } catch (err) {\n    console.log(err.response.data);\n  }\n}\n\nexport function* theoDoiGetUserSaga() {\n  yield takeLatest(\"GET_LIST_MANAGEMENT_USER_SAGA\", getUserManagementSaga);\n}\n\n//Quản lý các action saga\nfunction* addUserProjectSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      userService.assignUserProject(action.userProject)\n    );\n\n    yield put({\n      type: \"GET_LIST_PROJECT_SAGA\",\n    });\n  } catch (err) {\n    console.log(err.response.data);\n  }\n}\n\nexport function* theoDoiAddUserProject() {\n  yield takeLatest(\"ADD_USER_PROJECT_API\", addUserProjectSaga);\n}\n\n//Quản lý các action saga\nfunction* removeUserProjectSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      userService.deleteUserFromProject(action.userProject)\n    );\n\n    yield put({\n      type: \"GET_LIST_PROJECT_SAGA\",\n    });\n  } catch (err) {\n    console.log(err.response.data);\n  }\n}\n\nexport function* theoDoiRemoveUserProject() {\n  yield takeLatest(\"REMOVE_USER_PROJECT_API\", removeUserProjectSaga);\n}\n\nfunction* getUserByProjectIdSaga(action) {\n  const { idProject } = action;\n  console.log(\"action\", idProject);\n\n  try {\n    const { data, status } = yield call(() =>\n      userService.getUserByProjectId(idProject)\n    );\n    console.log(\"checkdata\", data);\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: GET_USER_BY_PROJECT_ID,\n        arrUser: data.content,\n      });\n    }\n  } catch (err) {\n    console.log(err);\n    console.log(err.response?.data);\n    if (err.response?.data.statusCode === STATUS_CODE.NOT_FOUND) {\n      yield put({\n        type: GET_USER_BY_PROJECT_ID,\n        arrUser: [],\n      });\n    }\n  }\n}\n\nexport function* theoDoiGetUserByProjectIdSaga() {\n  yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga);\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { GET_ALL_PROJECT_CATEGORY, GET_ALL_PROJECT_CATEGORY_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\n\nfunction* getAllProjectCategorySaga(action) {\n    console.log('actionSaga', action);\n\n    try {\n\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => cyberbugsService.getAllProjectCategory());\n\n\n\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_ALL_PROJECT_CATEGORY,\n                data: data.content\n            });\n        }\n\n\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n\n\n\n\n\nexport function* theoDoigetAllProjectCategory() {\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga);\n}","import { baseService } from \"./baseService\";\n\nexport class ProjectService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllProject = () => {\n        return this.get(`Project/getAllProject`);\n    }\n\n    deleteProject = (id) => {\n        \n       return this.delete(`Project/deleteProject?projectId=${id}`);\n    }\n\n    getProjectDetail = (projectId) => {\n        return this.get(`Project/getProjectDetail?id=${projectId}`);\n    }\n\n}\n\n\nexport const projectService = new ProjectService();\n","import { notification } from \"antd\"\n\nexport const notifiFunction = (type, message, description = '') => {\n    notification[type]({ //action.typeNotification = success | warning | info | error,\n        message: message,\n        description: description\n    })\n}","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport { history } from \"../../../util/history\";\nimport { projectService } from \"../../../services/ProjectService\";\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\nimport {\n  GET_ALL_PROJECT,\n  GET_ALL_PROJECT_SAGA,\n} from \"../../constants/Cyberbugs/ProjectCyberBugsConstants\";\nimport { GET_USER_BY_PROJECT_ID_SAGA } from \"../../constants/Cyberbugs/UserConstatnts\";\nfunction* createProjectSaga(action) {\n  console.log(\"actionCreateProject\", action);\n  //HIỂN THỊ LOADING\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(500);\n\n  try {\n    //Gọi api lấy dữ liệu về\n    const { data, status } = yield call(() =>\n      cyberbugsService.createProjectAuthorization(action.newProject)\n    );\n    //Gọi api thành công thì dispatch lên reducer thông qua put\n    if (status === STATUS_CODE.SUCCESS) {\n      console.log(data);\n\n      history.push(\"/projectmanagement\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiCreateProjectSaga() {\n  yield takeLatest(\"CREATE_PROJECT_SAGA\", createProjectSaga);\n}\n\n//Saga dùng để get all project từ api\n//Khải - Code ngày dd/MM/yyyy\n\nfunction* getListProjectSaga(action) {\n  try {\n    const { data, status } = yield call(() =>\n      cyberbugsService.getListProject()\n    );\n\n    //Sau khi lấy dữ liệu từ api về thành công\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: \"GET_LIST_PROJECT\",\n        projectList: data.content,\n      });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function* theoDoiGetListProjectSaga() {\n  yield takeLatest(\"GET_LIST_PROJECT_SAGA\", getListProjectSaga);\n}\n\n//UpdateProject\nfunction* updateProjectSaga(action) {\n  // console.log('action123',action);\n  // return;\n  //HIỂN THỊ LOADING\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(500);\n\n  try {\n    const { data, status } = yield call(() =>\n      cyberbugsService.updateProject(action.prjectUpdate)\n    );\n    //Gọi api thành công thì dispatch lên reducer thông qua put\n    if (status === STATUS_CODE.SUCCESS) {\n      console.log(data);\n\n      // history.push('/projectmanagement');\n    }\n    // yield put({\n    //     type:'GET_LIST_PROJECT_SAGA'\n    // })\n    yield call(getListProjectSaga);\n    yield put({\n      type: \"CLOSE_DRAWER\",\n    });\n  } catch (err) {\n    console.log(err);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiUpdateProjectSaga() {\n  yield takeLatest(\"UPDATE_PROJECT_SAGA\", updateProjectSaga);\n}\n\n//UpdateProject\nfunction* deleteProjectSaga(action) {\n  // console.log('action123',action);\n  // return;\n  //HIỂN THỊ LOADING\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(500);\n\n  try {\n    const { data, status } = yield call(() =>\n      projectService.deleteProject(action.idProject)\n    );\n    //Gọi api thành công thì dispatch lên reducer thông qua put\n    if (status === STATUS_CODE.SUCCESS) {\n      console.log(data);\n\n      notifiFunction(\"success\", \"Delete project successfully !\");\n\n      // history.push('/projectmanagement');\n    } else {\n      notifiFunction(\"error\", \"Delete project fail !\");\n    }\n    // yield put({\n    //     type:'GET_LIST_PROJECT_SAGA'\n    // })\n    yield call(getListProjectSaga);\n    yield put({\n      type: \"CLOSE_DRAWER\",\n    });\n  } catch (err) {\n    notifiFunction(\"error\", \"Delete project fail !\");\n    console.log(err);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiDeleteProject() {\n  yield takeLatest(\"DELETE_PROJECT_SAGA\", deleteProjectSaga);\n}\n\nfunction* getProjectDetailSaga(action) {\n  // console.log('action123',action);\n  // return;\n  //HIỂN THỊ LOADING\n  // yield put({\n  //     type: DISPLAY_LOADING\n  // })\n  yield delay(500);\n\n  try {\n    const { data, status } = yield call(() =>\n      projectService.getProjectDetail(action.projectId)\n    );\n\n    console.log(\"data\", data);\n    //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\n    yield put({\n      type: \"PUT_PROJECT_DETAIL\",\n      projectDetail: data.content,\n    });\n  } catch (err) {\n    console.log(\"404 not found !\");\n    // history.push('/projectmanagement');\n  }\n\n  // yield put({\n  //     type: HIDE_LOADING\n  // })\n}\n\nexport function* theoDoiGetProjectDetail() {\n  yield takeLatest(\"GET_PROJECT_DETAIL\", getProjectDetailSaga);\n}\n\nfunction* getProjectAllSaga(action) {\n  // console.log('action123',action);\n  // return;\n  //HIỂN THỊ LOADING\n  yield put({\n    type: DISPLAY_LOADING,\n  });\n  yield delay(500);\n\n  try {\n    const { data, status } = yield call(() => projectService.getAllProject());\n\n    //Lấy dữ liệu thành công thì đưa dữ liệu lên redux\n    yield put({\n      type: GET_ALL_PROJECT,\n      arrProject: data.content,\n    });\n\n    yield put({\n      type: GET_USER_BY_PROJECT_ID_SAGA,\n      idProject: data.content[0].id,\n    });\n  } catch (err) {\n    console.log(\"404 not found !\");\n    history.push(\"/projectmanagement\");\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiGetAllProjectSaga() {\n  yield takeLatest(GET_ALL_PROJECT_SAGA, getProjectAllSaga);\n}\n","import { baseService } from \"./baseService\";\n\nexport class TaskTypeService extends baseService {\n\n    constructor(){\n        super();\n    }\n    getAllTaskType = () => {\n        return this.get('TaskType/getAll');\n    }\n\n}\n\n\nexport const taskTypeService = new TaskTypeService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { taskTypeService } from \"../../../services/TaskTypeService\";\nimport { GET_ALL_TASK_TYPE, GET_ALL_TASK_TYPE_SAGA } from \"../../constants/Cyberbugs/TaskTypeConstants\";\n\nfunction * getAllTaskTypeSaga (action) {\n\n    try {\n        const {data,status} = yield call(()=> taskTypeService.getAllTaskType());\n\n        yield put({\n            type: GET_ALL_TASK_TYPE,\n            arrTaskType:data.content\n        })\n\n\n\n    }catch (err) {\n        console.log(err);\n    }\n\n\n\n}\n\n\nexport function * theoDoiGetAllTaskTypeSaga () {\n    yield takeLatest(GET_ALL_TASK_TYPE_SAGA,getAllTaskTypeSaga)\n}","import { baseService } from \"./baseService\";\n\nexport class PriorityService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllPriority = () => {\n        return this.get(`Priority/getAll`);\n    }\n\n    \n\n}\n\n\nexport const priorityService = new PriorityService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { priorityService } from \"../../../services/PriorityService\";\nimport { GET_ALL_PRIORITY, GET_ALL_PRIORITY_SAGA } from \"../../constants/Cyberbugs/PriorityConstants\";\n\nfunction * getAllPrioritySaga(action) {\n    try {\n        const {data,status} = yield call(()=> priorityService.getAllPriority());\n\n        yield put({type:GET_ALL_PRIORITY,arrPriority:data.content});\n\n\n    }catch(err) {\n        console.log(err);\n    }\n}\n\n\n\nexport function * theoDoiGetAllPriority() {\n    yield takeLatest(GET_ALL_PRIORITY_SAGA,getAllPrioritySaga)\n}","import { baseService } from \"./baseService\";\n\nexport class TaskService extends baseService {\n\n    constructor(){\n        super();\n    }\n    createTask = (taskObject) => {\n        return this.post('Project/createTask',taskObject);\n    }\n\n\n    getTaskDetail = (taskId) => {\n        return this.get(`Project/getTaskDetail?taskId=${taskId}`)\n    }\n\n    updateStatusTask = (taskStatusUpdate) => {\n        return this.put(`Project/updateStatus`,taskStatusUpdate);\n    }\n    updateTask = (taskUpdate) => {\n        return this.post(`Project/updateTask`,taskUpdate);\n    }\n}   \n\n\nexport const taskService = new TaskService();","import { call, put, select, takeLatest } from \"redux-saga/effects\";\nimport { taskService } from \"../../../services/TaskService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport {\n  HANDLE_CHANGE_POST_API_SAGA,\n  GET_TASK_DETAIL_SAGA,\n  GET_TASK_DETAIL,\n  UPDATE_STATUS_TASK_SAGA,\n  UPDATE_TASK_SAGA,\n  CHANGE_TASK_MODAL,\n  CHANGE_ASSIGNESS,\n  REMOVE_USER_ASSIGN,\n} from \"../../constants/Cyberbugs/TaskConstants\";\nimport { history } from \"../../../util/history\";\nfunction* createTaskSaga(action) {\n  try {\n    yield put({\n      type: DISPLAY_LOADING,\n    });\n    const { data, status } = yield call(() =>\n      taskService.createTask(action.taskObject)\n    );\n\n    //Gọi api thành công thì dispatch lên reducer thông qua put\n    if (status === STATUS_CODE.SUCCESS) {\n      console.log(data);\n    }\n    yield put({\n      type: \"CLOSE_DRAWER\",\n    });\n    notifiFunction(\"success\", \"Create task successfully !\");\n    history.push(`/projectdetail/${data.content.projectId}`);\n    yield put({\n      type: \"PUT_PROJECT_DETAIL\",\n      projectDetail: data.content,\n    });\n    yield put({\n      type: \"GET_PROJECT_DETAIL\",\n      projectId: data.content.projectId,\n    });\n  } catch (err) {\n    console.log(err.response.data);\n  }\n\n  yield put({\n    type: HIDE_LOADING,\n  });\n}\n\nexport function* theoDoiCreateTaskSaga() {\n  yield takeLatest(\"CREATE_TASK_SAGA\", createTaskSaga);\n}\n\nfunction* getTaskDetailSaga(action) {\n  const { taskId } = action;\n\n  try {\n    const { data, status } = yield call(() =>\n      taskService.getTaskDetail(taskId)\n    );\n\n    yield put({\n      type: GET_TASK_DETAIL,\n      taskDetailModal: data.content,\n    });\n  } catch (err) {\n    console.log(err);\n    console.log(err.response?.data);\n  }\n}\n\nexport function* theoDoiGetTaskDetailSaga(action) {\n  yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga);\n}\n\n//update task\n\nfunction* updateTaskStatusSaga(action) {\n  const { taskUpdateStatus } = action;\n  console.log(action);\n  try {\n    //Cập nhật api status cho task hiện tại (Task đang mở modal)\n    const { data, status } = yield call(() =>\n      taskService.updateStatusTask(taskUpdateStatus)\n    );\n\n    //Sau khi thành công gọi lại getProjectDetail saga để sắp xếp lại thông tin các task\n    // console.log(data)\n    if (status == STATUS_CODE.SUCCESS) {\n      yield put({\n        type: \"GET_PROJECT_DETAIL\",\n        projectId: taskUpdateStatus.projectId,\n      });\n\n      yield put({\n        type: GET_TASK_DETAIL_SAGA,\n        taskId: taskUpdateStatus.taskId,\n      });\n    }\n  } catch (err) {\n    console.log(err);\n    console.log(err.response?.data);\n  }\n}\n\nexport function* theoDoiUpdateTaskStatusSaga() {\n  yield takeLatest(UPDATE_STATUS_TASK_SAGA, updateTaskStatusSaga);\n}\n\nfunction* updateTaskSaga(action) {}\n\nexport function* theoDoiUdpateTask() {\n  yield takeLatest(UPDATE_TASK_SAGA, updateTaskSaga);\n}\n\nexport function* handelChangePostApi(action) {\n  // console.log('abc', action)\n  //Gọi action làm thay đổi taskDetail modal\n  switch (action.actionType) {\n    case CHANGE_TASK_MODAL:\n      {\n        const { value, name } = action;\n\n        yield put({\n          type: CHANGE_TASK_MODAL,\n          name,\n          value,\n        });\n      }\n      break;\n    case CHANGE_ASSIGNESS:\n      {\n        const { userSelected } = action;\n        yield put({\n          type: CHANGE_ASSIGNESS,\n          userSelected,\n        });\n      }\n      break;\n    case REMOVE_USER_ASSIGN:\n      {\n        const { userId } = action;\n        yield put({\n          type: REMOVE_USER_ASSIGN,\n          userId,\n        });\n      }\n      break;\n  }\n\n  //Save qua api updateTaskSaga\n  //Lây dữ liệu từ state.taskDetailModal\n  let { taskDetailModal } = yield select((state) => state.TaskReducer);\n  console.log(\"taskDetailModal sau khi thay đổi\", taskDetailModal);\n  //Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\n\n  const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\n    return user.id;\n  });\n\n  const taskUpdateApi = { ...taskDetailModal, listUserAsign };\n  try {\n    const { data, status } = yield call(() =>\n      taskService.updateTask(taskUpdateApi)\n    );\n\n    if (status === STATUS_CODE.SUCCESS) {\n      yield put({\n        type: \"GET_PROJECT_DETAIL\",\n        projectId: taskUpdateApi.projectId,\n      });\n    }\n  } catch (err) {\n    console.log(err.response?.data);\n    console.log(err);\n  }\n}\n\nexport function* theoDoiHandleChangePostApi() {\n  yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handelChangePostApi);\n}\n","import { baseService } from \"./baseService\";\n\nexport class StatusService extends baseService {\n\n    constructor(){\n        super();\n    }\n\n    getAllStatus = () => {\n        return this.get(`Status/getAll`)\n    }\n\n}\n\n\nexport const statusService = new StatusService();\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { statusService } from \"../../../services/StatusService\";\nimport { GET_ALL_STATUS, GET_ALL_STATUS_SAGA } from \"../../constants/Cyberbugs/StatusConstant\";\n\nfunction * getAllStatusSaga (action) {\n\n    try {\n        const {data,status} = yield call(()=> statusService.getAllStatus());\n\n        yield put({\n            type: GET_ALL_STATUS,\n            arrStatus:data.content\n        })\n\n\n    }catch(err) {\n        console.log(err);\n        console.log(err.response?.data)\n    }\n\n}\n\n\n\nexport function *theoDoiGetAllStatusSaga() {\n\n    yield takeLatest(GET_ALL_STATUS_SAGA, getAllStatusSaga)\n\n}","import { all } from \"redux-saga/effects\";\nimport Todolist from \"../../pages/Todolist/Todolist\";\nimport TodolistRFC from \"../../pages/Todolist/TodolistRFC\";\nimport * as ToDoListSaga from \"./ToDoListSaga\";\n// import {theoDoiActionGetTaskApi} from './ToDoListSaga'\nimport * as Cyberbugs from \"./Cyberbugs/UserCyberbugsSaga\";\nimport * as ProjectCategorySaga from \"./Cyberbugs/ProjectCategorySaga\";\nimport * as ProjectSaga from \"./Cyberbugs/ProjectSaga\";\nimport * as TaskTypeSaga from \"./Cyberbugs/TaskTypeSaga\";\nimport * as PrioritySaga from \"./Cyberbugs/PrioritySaga\";\nimport * as TaskSaga from \"./Cyberbugs/TaskSaga\";\nimport * as StatusSaga from \"./Cyberbugs/StatusSaga\";\nimport { cyberbugsService } from \"../../services/CyberbugsService\";\n\nexport function* rootSaga() {\n  yield all([\n    //Nghiệp vụ theo dõi các action saga todolist\n    ToDoListSaga.theoDoiActionGetTaskApi(),\n    ToDoListSaga.theoDoiActionAddTaskApi(),\n    ToDoListSaga.theoDoiActionDeleteTask(),\n    ToDoListSaga.theoDoiDoneTask(),\n    ToDoListSaga.theoDoiRejectTask(),\n\n    //Nghiệp vụ cyberbugs .... ,\n    Cyberbugs.theoDoiSignin(),\n    Cyberbugs.theoDoiSignup(),\n    Cyberbugs.theoDoiGetUser(),\n    Cyberbugs.theoDoiRemoveUserProject(),\n    Cyberbugs.theoDoiAddUserProject(),\n    Cyberbugs.theoDoiGetUserByProjectIdSaga(),\n    ProjectCategorySaga.theoDoigetAllProjectCategory(),\n    Cyberbugs.theoDoiGetUserSaga(),\n    ProjectSaga.theoDoiCreateProjectSaga(),\n    ProjectSaga.theoDoiGetListProjectSaga(),\n    ProjectSaga.theoDoiUpdateProjectSaga(),\n    ProjectSaga.theoDoiDeleteProject(),\n    ProjectSaga.theoDoiGetProjectDetail(),\n    ProjectSaga.theoDoiGetAllProjectSaga(),\n    StatusSaga.theoDoiGetAllStatusSaga(),\n\n    TaskTypeSaga.theoDoiGetAllTaskTypeSaga(),\n    PrioritySaga.theoDoiGetAllPriority(),\n\n    TaskSaga.theoDoiCreateTaskSaga(),\n    TaskSaga.theoDoiGetTaskDetailSaga(),\n    TaskSaga.theoDoiUpdateTaskStatusSaga(),\n    TaskSaga.theoDoiHandleChangePostApi(),\n    TaskSaga.theoDoiUdpateTask(),\n  ]);\n}\n","\n\n\nconst historyState = {\n    history:{}\n};\n\n\n\nexport const HistoryReducer = (state = historyState,action) => {\n    switch(action.type) {\n        case 'ADD_HISTORY':{\n            state.history = action.history;\n            console.log(state.history);\n            return {...state}\n        }\n        default: return {...state}\n    }\n}","import { USLOGIN } from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_USER_BY_PROJECT_ID } from \"../constants/Cyberbugs/UserConstatnts\";\n\nconst { USER_LOGIN } = require(\"../../util/constants/settingSystem\");\n\nlet usLogin = {};\n\nif(localStorage.getItem(USER_LOGIN)) {\n    usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\n}\n\n\n\n\nconst stateDefault =  {\n    userLogin : usLogin,\n    userSearch: [],\n    arrUser:[]//Array user cho thẻ select create task\n\n}\n\n\n\nexport const UserLoginCyberBugsReducer = (state = stateDefault,action) => {\n    switch(action.type) {\n        case USLOGIN: {\n            state.userLogin = action.userLogin;\n            return {...state}\n        }\n\n        case 'GET_USER_SEARCH' :{\n            state.userSearch = action.lstUserSearch;\n            console.log('stateUser',state);\n            return {...state}\n        }\n        case GET_USER_BY_PROJECT_ID: {\n            return  {...state,arrUser:action.arrUser}\n        }\n\n        default : return {...state};\n    }\n}","import { GET_ALL_PROJECT_CATEGORY } from \"../constants/Cyberbugs/Cyberbugs\";\n\n\nconst stateDefault = {\n    arrProjectCategory : []\n}\n\n\n\n\nexport const ProjectCategoryReducer = (state = stateDefault,action) => {\n    switch(action.type){\n\n        case GET_ALL_PROJECT_CATEGORY: {\n            state.arrProjectCategory = action.data;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import { GET_ALL_PROJECT } from \"../constants/Cyberbugs/ProjectCyberBugsConstants\";\n\n\nconst stateDefault = {\n    projectList: [],\n    arrProject: [] //Get allproject cho dropdown\n\n}\n\n\n\n\nexport const ProjectCyberBugsReducer = (state = stateDefault,action) => {\n\n\n    switch(action.type){\n\n        case 'GET_LIST_PROJECT': {\n                state.projectList = action.projectList;\n                console.log(\"projectList\",action.projectList)\n                return {...state};\n        }\n\n        case GET_ALL_PROJECT : {\n            // state.arrProject = action.arrProject;\n            return {...state,arrProject:action.arrProject}\n        }\n\n        default: return {...state}\n    }\n}","import React from 'react'\nconst initialState = {\n    visible: false,\n    title:'',\n    ComponentContentDrawer: <p>default</p>,\n    callBackSubmit: (propsValue) => { alert('click demo!') }\n}\n\nexport const drawerReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'OPEN_DRAWER':\n            return { ...state, visible: true }\n        case 'CLOSE_DRAWER':\n            return { ...state, visible: false }\n        case 'OPEN_FORM_EDIT_PROJECT': {\n            state.visible = true;\n            state.ComponentContentDrawer = action.Component;\n            state.title = action.title;\n            return { ...state }\n\n        }\n        case 'SET_SUBMIT_EDIT_PROJECT': {\n            state.callBackSubmit = action.submitFunction;\n            return {...state};\n        }\n\n        case 'SET_SUBMIT_CREATE_TASK' : {\n            return {...state,callBackSubmit:action.submitFunction}\n        }\n\n        case 'OPEN_FORM_CREATE_TASK' : {\n            state.visible = true;\n            state.title = action.title;\n            state.ComponentContentDrawer = action.Component;\n            return {...state};\n\n        }\n\n        \n\n        default:\n            return state\n    }\n}\n","\nconst initialState = {\n    projectEdit: {\n        \"id\": 0,\n        \"projectName\": \"string\",\n        \"creator\": 0,\n        \"description\": \"string\",\n        \"categoryId\": \"2\"\n      },\n    projectDetail:{\n        \n    }\n}\n\nexport const ProjectReducer =  (state = initialState,  action) => {\n    switch (action.type) {\n    \n    case  'EDIT_PROJECT': {\n        state.projectEdit = action.projectEditModel;\n        return {...state}\n\n    }\n    case 'PUT_PROJECT_DETAIL': {\n        state.projectDetail = action.projectDetail;\n        return {...state}\n    } \n    \n    default:\n        return state\n    }\n}\n","import { GET_ALL_TASK_TYPE } from \"../constants/Cyberbugs/TaskTypeConstants\"\n\nconst initialState = {\n    arrTaskType: []\n}\n\nexport const TaskTypeReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_TASK_TYPE:\n        return { ...state, arrTaskType:action.arrTaskType }\n\n    default:\n        return state\n    }\n}\n","import { GET_ALL_PRIORITY } from \"../constants/Cyberbugs/PriorityConstants\"\n\nconst initialState = {\n    arrPriority : []\n}\n\nexport const PriorityReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_PRIORITY:\n        return { ...state,arrPriority:action.arrPriority }\n\n    default:\n        return state\n    }\n}\n","import { GET_ALL_STATUS } from \"../constants/Cyberbugs/StatusConstant\"\n\nconst initialState = {\n    arrStatus:[]\n}\n\nexport const StatusReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_ALL_STATUS:\n\n        // state.arrStatus = action.arrStatus;\n        return { ...state,arrStatus :action.arrStatus }\n\n    default:\n        return state\n    }\n}\n","import { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, GET_TASK_DETAIL, REMOVE_USER_ASSIGN } from \"../constants/Cyberbugs/TaskConstants\"\n\nconst initialState = {\n    taskDetailModal:  {\n      \"priorityTask\": {\n        \"priorityId\": 1,\n        \"priority\": \"High\"\n      },\n      \"taskTypeDetail\": {\n        \"id\": 1,\n        \"taskType\": \"bug\"\n      },\n      \"assigness\": [\n        {\n          \"id\": 68,\n          \"avatar\": \"https://ui-avatars.com/api/?name=khải\",\n          \"name\": \"khải\",\n          \"alias\": \"khai\"\n        },\n        {\n          \"id\": 69,\n          \"avatar\": \"https://ui-avatars.com/api/?name=thoa\",\n          \"name\": \"thoa\",\n          \"alias\": \"thoa\"\n        }\n      ],\n      \"lstComment\": [],\n      \"taskId\": 54,\n      \"taskName\": \"task 1\",\n      \"alias\": \"task-1\",\n      \"description\": \"<p>Before you start work on an issue, you can set a time or other type of estimate to calculate how much work you believe it'll take to resolve it. Once you've started to work on a specific issue, log time to keep a record of it.</p>\\n<p>&nbsp;</p>\\n<ul>\\n<li>Open the issue and select&nbsp;&bull;&bull;&bull; &gt;&nbsp;Time tracking</li>\\n<li>Fill in the<strong>&nbsp;Time Spent</strong>&nbsp;field</li>\\n<li>Fill in the <strong>Time Remaining</strong> field and click Save</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h3><u>That's it!</u></h3>\\n<h1>💯💯</h1>\\n<p>&nbsp;</p>\",\n      \"statusId\": \"2\",\n      \"originalEstimate\": 30,\n      \"timeTrackingSpent\": 10,\n      \"timeTrackingRemaining\": 10,\n      \"typeId\": 1,\n      \"priorityId\": 1,\n      \"projectId\": 109\n    }\n}\n\n\n\n\nexport const TaskReducer = (state = initialState,action) => {\n    switch (action.type) {\n\n    case GET_TASK_DETAIL: {\n        console.log(action.taskDetailModal);\n        return {...state,taskDetailModal:action.taskDetailModal}\n    }\n    case CHANGE_TASK_MODAL: {\n      const {name,value} = action;\n      console.log('value',value)\n      // console.log(state.taskDetailModal)\n      return {...state,taskDetailModal: {...state.taskDetailModal,[name]:value}}\n    }\n\n    case CHANGE_ASSIGNESS : {\n\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness,action.userSelected];\n      // console.log('state',state)\n      return {...state}\n    }\n\n    case REMOVE_USER_ASSIGN:{\n\n      state.taskDetailModal.assigness = [...state.taskDetailModal.assigness.filter(us => us.id !== action.userId)]\n      return {...state}\n    }\n    default:\n        return state\n    }\n}\n","import { GET_USER_MANAGEMENT } from \"../constants/Cyberbugs/UserConstatnts\";\r\n\r\nconst initialState = {\r\n  userList: [],\r\n};\r\n\r\nexport const UserManagementReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_MANAGEMENT:\r\n      console.log(action);\r\n      state.userList = action.userList;\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport ToDoListReducer from \"./reducers/ToDoListReducer\";\nimport LoadingReducer from \"./reducers/LoadingReducer\";\nimport { ModalReducer } from \"./reducers/ModalReducer\";\nimport reduxThunk from \"redux-thunk\";\n\n//middleware saga\nimport createMiddleWareSaga from \"redux-saga\";\nimport { rootSaga } from \"./sagas/rootSaga\";\nimport { HistoryReducer } from \"./reducers/HistoryReducer\";\nimport { UserLoginCyberBugsReducer } from \"./reducers/UserCyberBugsReducer\";\nimport { ProjectCategoryReducer } from \"./reducers/ProjectCategoryReducer\";\nimport { ProjectCyberBugsReducer } from \"./reducers/ProjectCyberBugsReducer\";\nimport { drawerReducer } from \"./reducers/DrawerCyberbugs\";\nimport { ProjectReducer } from \"./reducers/ProjectReducer\";\nimport { TaskTypeReducer } from \"./reducers/TaskTypeReducer\";\nimport { PriorityReducer } from \"./reducers/PriorityReducer\";\nimport { StatusReducer } from \"./reducers/StatusReducer\";\nimport { TaskReducer } from \"./reducers/TaskReducer\";\nimport { UserManagementReducer } from \"./reducers/UserManagementReducer\";\n\nconst middleWareSaga = createMiddleWareSaga();\nconst rootReducer = combineReducers({\n  //reducer khai báo tại đây\n  ToDoListReducer,\n  LoadingReducer,\n  ModalReducer,\n  HistoryReducer,\n  UserLoginCyberBugsReducer,\n  ProjectCategoryReducer,\n  ProjectCyberBugsReducer,\n  drawerReducer,\n  ProjectReducer,\n  TaskTypeReducer,\n  PriorityReducer,\n  StatusReducer,\n  TaskReducer,\n  UserManagementReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(reduxThunk, middleWareSaga)\n);\n\n//Gọi saga\nmiddleWareSaga.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//setup redux\nimport store from './redux/configStore'\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { BrowserRouter,Router } from 'react-router-dom';\nimport {history} from './util/history'\n\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n  ,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}